{"version":3,"sources":["../../../src/controls/ice_table_renderer.js"],"names":["renderHeader","renderMiniHeader","getRowClassNameAt","cellRenderer","K_ROW_HEIGHT","K_HEADER_HEIGHT","K_MINI_HEADER_HEIGHT","K_STYLE_IMAGE","width","height","borderLeft","K_KEY_COLUMN_RANK","K_KEY_COLUMN_DESCRIPTION","K_KEY_COLUMN_PHONE","K_ROW_CLASS_NAME_BORDER_LINE","K_ROW_CLASS_NAME_EVEN","K_ROW_CLASS_NAME_ODD","K_ROW_CLASS_NAME_EVEN_HOVERED","K_ROW_CLASS_NAME_ODD_HOVERED","K_SHOW_FILTERS_TEXT","columns","dataKey","fixed","flexGrow","label","resetFn","renderColumn0","cellDataKey","rowData","get","renderColumn1","renderColumn2","i","isHovered","isFirstInvisibleRow","borderTopClass","rowIndex"],"mappings":"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","file":"ice_table_renderer.js","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nconst K_ROW_HEIGHT = 105;\nconst K_HEADER_HEIGHT = 165;\nconst K_MINI_HEADER_HEIGHT = 40;\n\nexport {K_ROW_HEIGHT, K_HEADER_HEIGHT, K_MINI_HEADER_HEIGHT};\n\nconst K_STYLE_IMAGE = {\n    width: K_ROW_HEIGHT * 4 / 3,\n    height: K_ROW_HEIGHT,\n    borderLeft: '1px solid white'\n};\n\nconst K_KEY_COLUMN_RANK = 'K_KEY_COLUMN_RANK';\nconst K_KEY_COLUMN_DESCRIPTION = 'K_KEY_COLUMN_DESCRIPTION';\nconst K_KEY_COLUMN_PHONE = 'K_KEY_COLUMN_PHONE';\n\nconst K_ROW_CLASS_NAME_BORDER_LINE = 'ice-table ice-table--line';\nconst K_ROW_CLASS_NAME_EVEN = 'ice-table ice-table--row-even';\nconst K_ROW_CLASS_NAME_ODD = 'ice-table ice-table--row-odd';\n\nconst K_ROW_CLASS_NAME_EVEN_HOVERED = 'ice-table ice-table--row-even ice-table--row-hovered';\nconst K_ROW_CLASS_NAME_ODD_HOVERED = 'ice-table ice-table--row-odd ice-table--row-hovered';\n\nconst K_SHOW_FILTERS_TEXT = 'Show filters';\n\n// DATA DEFINITION\nconst columns = [\n    {\n        dataKey: K_KEY_COLUMN_RANK,\n        fixed: false,\n        flexGrow: 1,\n        label: '',\n        width: 105\n    },\n    {\n        dataKey: K_KEY_COLUMN_DESCRIPTION,\n        // bugs in fixed-data-table flex realization use fixed size to precise calculus\n        flexGrow: 9999999999,\n        fixed: false,\n        label: '',\n        width: 100\n    },\n    {\n        dataKey: K_KEY_COLUMN_PHONE,\n        flexGrow: 1,\n        fixed: false,\n        label: '',\n        width: 140\n    }\n];\n\nexport {columns};\n\nexport function renderHeader(resetFn) {\n    return (\n        <div className=\"ice-table-header\">\n            <div className=\"ice-table-header__filter-line-header\">BEST FILTERS EVER (empty)</div>\n            <div className=\"ice-table-header__filter-line\">\n                <hr />\n            </div>\n            <div className=\"ice-table-header__filter-line\">\n                <hr />\n            </div>\n            <div className=\"ice-table-header__filter-line\">\n                <hr />\n            </div>\n            <div className=\"ice-table-header__filter-line\">\n                <hr />\n            </div>\n            <div className=\"ice-table-header__show-filters\">\n                <a\n                    className=\"ice-table-header__show-filters-href ice-table-header__show-filters-href--disabled\"\n                    onClick={resetFn}>\n                    {K_SHOW_FILTERS_TEXT}\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport function renderMiniHeader(resetFn) {\n    return (\n        <div className=\"ice-table-header\">\n            <div className=\"ice-table-header__show-filters\">\n                <a\n                    className=\"ice-table-header__show-filters-href\"\n                    onClick={resetFn}>\n                    {K_SHOW_FILTERS_TEXT}\n                </a>\n            </div>\n        </div>\n    );\n}\n\n\nfunction renderColumn0(cellDataKey, rowData /*, rowIndex*/) {\n    return (\n        <div className=\"ice-table__column0\">\n            <div className={cx('ice-table__column0-number', 'ice-table__column0-number__color' + rowData.get('type'))}>{rowData.get('number')}</div>\n        </div>\n    );\n}\n\nfunction renderColumn1(cellDataKey, rowData /*, rowIndex*/) {\n    return (\n        <div className=\"ice-table__column1\">\n            <div className=\"ice-table__column1-title\">\n                {rowData.get('title')}\n            </div>\n            <div className=\"ice-table__column1-address\">\n                {rowData.get('address')}\n            </div>\n        </div>\n    );\n}\n\nfunction renderColumn2(cellDataKey, rowData /*, rowIndex*/) {\n    // image load hack (just put in array with key eq to src (c) istarkov :-))\n    return (\n        <div className=\"ice-table__column2\">\n            {[<img key={rowData.get('image')} src={rowData.get('image')} style={K_STYLE_IMAGE} />]}\n        </div>\n    );\n}\n\nexport function getRowClassNameAt(i, isHovered, isFirstInvisibleRow) {\n    const borderTopClass = isFirstInvisibleRow ? K_ROW_CLASS_NAME_BORDER_LINE : '';\n\n    if (isHovered) {\n        return borderTopClass + ' ' + (i % 2 === 0 ? K_ROW_CLASS_NAME_EVEN_HOVERED : K_ROW_CLASS_NAME_ODD_HOVERED);\n    }\n\n    return borderTopClass + ' ' + (i % 2 === 0 ? K_ROW_CLASS_NAME_EVEN : K_ROW_CLASS_NAME_ODD);\n}\n\nexport function cellRenderer(cellDataKey, rowData, rowIndex) {\n    switch (cellDataKey) {\n        case K_KEY_COLUMN_RANK:\n            return renderColumn0(cellDataKey, rowData, rowIndex);\n        case K_KEY_COLUMN_DESCRIPTION:\n            return renderColumn1(cellDataKey, rowData, rowIndex);\n        case K_KEY_COLUMN_PHONE:\n            return renderColumn2(cellDataKey, rowData, rowIndex);\n        default:\n            return (\n                <div>{rowData ? 'Hello world!' : ''}</div>\n            );\n    }\n}\n\n"]}