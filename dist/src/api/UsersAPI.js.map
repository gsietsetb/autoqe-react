{"version":3,"sources":["../../../src/api/UsersAPI.js"],"names":["types","API_URL","UserApi","Promise","resolve","reject","get","end","err","resp","JSON","parse","text"],"mappings":";;;;;;;;AAAA;;;;AACA;;IAAYA,K;;;;;;;;AAEZ,IAAMC,UAAUD,MAAMC,OAAN,GAAc,YAA9B;;IAEqBC,O;;;;;;;sCACI;AACjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,iCACKC,GADL,CACSL,OADT,EAEKM,GAFL,CAES,UAACC,GAAD,EAAMC,IAAN,EAAe;AAChB,wBAAID,GAAJ,EAASH,OAAOG,GAAP;AACTJ,4BAAQM,KAAKC,KAAL,CAAWF,KAAKG,IAAhB,CAAR;AACH,iBALL;AAMH,aAPM,CAAP;AAQA;AACA;AACA;AACA;AACA;AACH;;;;;AAEL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;kBA5CqBV,O","file":"UsersAPI.js","sourcesContent":["import request from 'superagent/lib/client';\nimport * as types from '../actions/actionTypes';\n\nconst API_URL = types.API_URL+'api/trips/';\n\nexport default class UserApi {\n    static getAllUsers() {\n        return new Promise((resolve, reject) => {\n            request\n                .get(API_URL)\n                .end((err, resp) => {\n                    if (err) reject(err);\n                    resolve(JSON.parse(resp.text));\n                })\n        });\n        // return fetch(API_URL).then(response => {\n        //     return response.json()\n        // }).catch(error => {\n        //     return error\n        // });\n    }\n}\n// We want to get a list of all the Users\n// from the API. This list contains reduced info\n// and will be be used in the sidebar\n\n\n//     getContacts: (url) => {\n//         return new Promise((resolve, reject) => {\n//             request\n//                 .get(url)\n//                 .end((err, response) => {\n//                     if (err) reject(err);\n//                     resolve(JSON.parse(response.text));\n//                 })\n//         });\n//     },\n//\n//     getContact: (url) => {\n//         return new Promise((resolve, reject) => {\n//             request\n//                 .get(url)\n//                 .set('Authorization', 'Bearer ' + AuthStore.getJwt())\n//                 .end((err, response) => {\n//                     if (err) reject(err);\n//                     resolve(JSON.parse(response.text));\n//                 })\n//         });\n//     }\n// }"]}