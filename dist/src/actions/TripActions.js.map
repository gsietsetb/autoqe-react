{
  "version": 3,
  "sources": [
    "../../../src/actions/TripActions.js"
  ],
  "names": [
    "loadTripsSuccess",
    "updateTripSuccess",
    "createTripSuccess",
    "deleteTripSuccess",
    "loadTrips",
    "updateTrip",
    "createTrip",
    "deleteTrip",
    "types",
    "trips",
    "type",
    "LOAD_TRIPS_SUCCESS",
    "trip",
    "UPDATE_TRIP_SUCCESS",
    "CREATE_TRIP_SUCCESS",
    "DELETE_TRIP_SUCCESS",
    "dispatch",
    "getAllTrips",
    "then",
    "catch",
    "error",
    "responseTrip",
    "console",
    "log",
    "id"
  ],
  "mappings": ";;;;;QAGgBA,gB,GAAAA,gB;QAIAC,iB,GAAAA,iB;QAIAC,iB,GAAAA,iB;QAIAC,iB,GAAAA,iB;QAIAC,S,GAAAA,S;QAYAC,U,GAAAA,U;QAUAC,U,GAAAA,U;QAWAC,U,GAAAA,U;;AApDhB;;;;AACA;;IAAYC,K;;;;;;AAEL,SAASR,gBAAT,CAA0BS,KAA1B,EAAiC;AACpC,WAAO,EAACC,MAAMF,MAAMG,kBAAb,EAAiCF,YAAjC,EAAP;AACH;;AAEM,SAASR,iBAAT,CAA2BW,IAA3B,EAAiC;AACpC,WAAO,EAACF,MAAMF,MAAMK,mBAAb,EAAkCD,UAAlC,EAAP;AACH;;AAEM,SAASV,iBAAT,CAA2BU,IAA3B,EAAiC;AACpC,WAAO,EAACF,MAAMF,MAAMM,mBAAb,EAAkCF,UAAlC,EAAP;AACH;;AAEM,SAAST,iBAAT,CAA2BS,IAA3B,EAAiC;AACpC,WAAO,EAACF,MAAMF,MAAMO,mBAAb,EAAkCH,UAAlC,EAAP;AACH;;AAEM,SAASR,SAAT,GAAqB;AACxB;AACA,WAAO,UAASY,QAAT,EAAmB;AACtB,eAAO,mBAAQC,WAAR,GAAsBC,IAAtB,CAA2B,iBAAS;AACvC;AACAF,qBAAShB,iBAAiBS,KAAjB,CAAT;AACH,SAHM,EAGJU,KAHI,CAGE,iBAAS;AACd,kBAAMC,KAAN;AACH,SALM,CAAP;AAMH,KAPD;AAQH;;AAEM,SAASf,UAAT,CAAoBO,IAApB,EAA0B;AAC7B,WAAO,UAAUI,QAAV,EAAoB;AACvB,eAAO,mBAAQX,UAAR,CAAmBO,IAAnB,EAAyBM,IAAzB,CAA8B,wBAAgB;AACjDF,qBAASf,kBAAkBoB,YAAlB,CAAT;AACH,SAFM,EAEJF,KAFI,CAEE,iBAAS;AACd,kBAAMC,KAAN;AACH,SAJM,CAAP;AAKH,KAND;AAOH;;AAEM,SAASd,UAAT,CAAoBM,IAApB,EAA0B;AAC7B,WAAO,UAAUI,QAAV,EAAoB;AACvB,eAAO,mBAAQV,UAAR,CAAmBM,IAAnB,EAAyBM,IAAzB,CAA8B,wBAAgB;AACjDF,qBAASd,kBAAkBmB,YAAlB,CAAT;AACA,mBAAOA,YAAP;AACH,SAHM,EAGJF,KAHI,CAGE,iBAAS;AACd,kBAAMC,KAAN;AACH,SALM,CAAP;AAMH,KAPD;AAQH;;AAEM,SAASb,UAAT,CAAoBK,IAApB,EAA0B;AAC7B,WAAO,UAASI,QAAT,EAAmB;AACtB,eAAO,mBAAQT,UAAR,CAAmBK,IAAnB,EAAyBM,IAAzB,CAA8B,YAAM;AACvCI,oBAAQC,GAAR,cAAuBX,KAAKY,EAA5B;AACAR,qBAASb,kBAAkBS,IAAlB,CAAT;AAEH,SAJM,EAIJO,KAJI,CAIE,iBAAS;AACd,kBAAMC,KAAN;AACH,SANM,CAAP;AAOH,KARD;AASH;;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "TripActions.js",
  "sourcesContent": [
    "import tripApi from '../api/TripsAPI';\nimport * as types from './actionTypes';\n\nexport function loadTripsSuccess(trips) {\n    return {type: types.LOAD_TRIPS_SUCCESS, trips};\n}\n\nexport function updateTripSuccess(trip) {\n    return {type: types.UPDATE_TRIP_SUCCESS, trip}\n}\n\nexport function createTripSuccess(trip) {\n    return {type: types.CREATE_TRIP_SUCCESS, trip}\n}\n\nexport function deleteTripSuccess(trip) {\n    return {type: types.DELETE_TRIP_SUCCESS, trip}\n}\n\nexport function loadTrips() {\n    // make async call to api, handle promise, dispatch action when promise is resolved\n    return function(dispatch) {\n        return tripApi.getAllTrips().then(trips => {\n            // console.log('dispatching: '+JSON.stringify(trips));\n            dispatch(loadTripsSuccess(trips));\n        }).catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function updateTrip(trip) {\n    return function (dispatch) {\n        return tripApi.updateTrip(trip).then(responseTrip => {\n            dispatch(updateTripSuccess(responseTrip));\n        }).catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function createTrip(trip) {\n    return function (dispatch) {\n        return tripApi.createTrip(trip).then(responseTrip => {\n            dispatch(createTripSuccess(responseTrip));\n            return responseTrip;\n        }).catch(error => {\n            throw(error);\n        });\n    };\n}\n\nexport function deleteTrip(trip) {\n    return function(dispatch) {\n        return tripApi.deleteTrip(trip).then(() => {\n            console.log(`Deleted ${trip.id}`);\n            dispatch(deleteTripSuccess(trip));\n\n        }).catch(error => {\n            throw(error);\n        })\n    }\n}\n\n\n\n\n//\n//\n//     loadTripsSuccess: (trips) => {\n//         return {type: types.LOAD_TRIPS_SUCCESS, trips};\n//     },\n//\n//     loadTrips: () => {\n//         return function(dispatch) {\n//             return TripsAPI.getAllTrips().then(trips => {\n//                 dispatch(loadTripsSuccess(trips));\n//             }).catch(error => {\n//                 throw(error);\n//             });\n//         };\n// // recieveTrips: () => {\n//         // TripsAPI\n//         //   .getTrips(api_url+'api/Trips')\n//         //   .then(Trips => {\n//         //     AppDispatcher.dispatch({\n//         //       actionType: TripConstants.RECIEVE_TRIPS,\n//         //       Trips: Trips\n//         //     });\n//         //   })\n//         //   .catch(message => {\n//         //     AppDispatcher.dispatch({\n//         //       actionType: TripConstants.RECIEVE_TRIPS_ERROR,\n//         //       message: message\n//         //     });\n//         //   });\n//     },\n//\n//\n//     getTrip: (id) => {\n//         TripsAPI\n//             .getTrip(api_url+'api/Trips/' + id)\n//             .then(trip => {\n//                 AppDispatcher.dispatch({\n//                     actionType: TripConstants.RECIEVE_TRIP,\n//                     trip: trip\n//                 });\n//             })\n//             .catch(message => {\n//                 AppDispatcher.dispatch({\n//                     actionType: TripConstants.RECIEVE_TRIP_ERROR,\n//                     message: message\n//                 });\n//             });\n//     }\n//\n// }\n"
  ]
}