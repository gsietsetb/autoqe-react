{"version":3,"sources":["../../../src/actions/UserActions.js"],"names":["loadUsersSuccess","loadUsers","types","users","type","LOAD_USERS_SUCCESS","dispatch","getAllUsers","then","catch","error"],"mappings":";;;;;QAGgBA,gB,GAAAA,gB;QAGAC,S,GAAAA,S;;AANhB;;;;AACA;;IAAYC,K;;;;;;AAEL,SAASF,gBAAT,CAA0BG,KAA1B,EAAiC;AACpC,WAAO,EAACC,MAAMF,MAAMG,kBAAb,EAAiCF,YAAjC,EAAP;AACH;AACM,SAASF,SAAT,GAAqB;AACxB;AACA,WAAO,UAASK,QAAT,EAAmB;AACtB,eAAO,mBAAQC,WAAR,GAAsBC,IAAtB,CAA2B,iBAAS;AACvCF,qBAASN,iBAAiBG,KAAjB,CAAT;AACH,SAFM,EAEJM,KAFI,CAEE,iBAAS;AACd,kBAAMC,KAAN;AACH,SAJM,CAAP;AAKH,KAND;AAOH;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserActions.js","sourcesContent":["import userApi from '../api/UsersAPI';\nimport * as types from './actionTypes';\n\nexport function loadUsersSuccess(users) {\n    return {type: types.LOAD_USERS_SUCCESS, users};\n}\nexport function loadUsers() {\n    // make async call to api, handle promise, dispatch action when promise is resolved\n    return function(dispatch) {\n        return userApi.getAllUsers().then(users => {\n            dispatch(loadUsersSuccess(users));\n        }).catch(error => {\n            throw(error);\n        });\n    };\n}\n\n// const api_url = 'https://api.autoqe.com/';\n// // const api_url = 'http://localhost:3001/';\n//\n// export default {\n//\n//   recieveContacts: () => {\n//     ContactsAPI\n//       .getContacts(api_url+'api/Users')\n//       .then(contacts => {\n//         AppDispatcher.dispatch({\n//           actionType: ContactConstants.RECIEVE_USERS,\n//           contacts: contacts\n//         });\n//       })\n//       .catch(message => {\n//         AppDispatcher.dispatch({\n//           actionType: ContactConstants.RECIEVE_USERS_ERROR,\n//           message: message\n//         });\n//       });\n//   },\n//\n//   getContact: (id) => {\n//     ContactsAPI\n//       .getContact(api_url+'api/Users/' + id)\n//       .then(contact => {\n//         AppDispatcher.dispatch({\n//           actionType: ContactConstants.RECIEVE_USER,\n//           contact: contact\n//         });\n//       })\n//       .catch(message => {\n//         AppDispatcher.dispatch({\n//           actionType: ContactConstants.RECIEVE_USER_ERROR,\n//           message: message\n//         });\n//       });\n//   }\n//\n// }\n"]}