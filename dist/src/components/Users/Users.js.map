{"version":3,"sources":["../../../../src/components/Users/Users.js"],"names":["getContactListItem","contact","id","ContactsComponent","state","contacts","onChange","bind","addChangeListener","recieveContacts","removeChangeListener","setState","getContacts","contactListItems","map"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;AACA;AACA,SAASA,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,SACE;AACE,SAAKA,QAAQC,EADf;AAEE,aAASD;AAFX,IADF;AAMD;;IACKE,iB;;;AAEJ,+BAAc;AAAA;;AAEZ;AACA;AAHY;;AAIZ,UAAKC,KAAL,GAAa;AACXC,gBAAU;AADC,KAAb;AAGA;AACA;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AATY;AAUb;;;;yCAEoB;AACnB,6BAAaC,iBAAb,CAA+B,KAAKF,QAApC;AACD;;;wCAEmB;AAClB,4BAAeG,eAAf;AACD;;;2CAEsB;AACrB,6BAAaC,oBAAb,CAAkC,KAAKJ,QAAvC;AACD;;;+BAEU;AACT,WAAKK,QAAL,CAAc;AACZN,kBAAU,uBAAaO,WAAb;AADE,OAAd;AAGD;;;6BAEQ;AACP,UAAIC,yBAAJ;AACA,UAAI,KAAKT,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACAQ,2BAAmB,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwB;AAAA,iBAAWd,mBAAmBC,OAAnB,CAAX;AAAA,SAAxB,CAAnB;AACD;AACD,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AACGY;AADH;AADF,OADF;AAOD;;;;;;kBAGYV,iB","file":"Users.js","sourcesContent":["import React, {Component} from 'react';\nimport {ListGroup} from 'react-bootstrap';\nimport ContactActions from '../../actions/UserActions';\nimport ContactStore from '../../store/ContactStore';\nimport ContactListItem from './UserListItem';\n\n// We'll use this function to get a contact\n// list item for each of the Users in our list\nfunction getContactListItem(contact) {\n  return (\n    <ContactListItem\n      key={contact.id}\n      contact={contact}\n    />\n  );\n}\nclass ContactsComponent extends Component {\n\n  constructor() {\n    super();\n    // For our initial state, we just want\n    // an empty array of Users\n    this.state = {\n      contacts: []\n    };\n    // We need to bind this to onChange so we can have\n    // the proper this reference inside the method\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    ContactStore.addChangeListener(this.onChange);\n  }\n\n  componentDidMount() {\n    ContactActions.recieveContacts();\n  }\n\n  componentWillUnmount() {\n    ContactStore.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      contacts: ContactStore.getContacts()\n    });\n  }\n\n  render() {\n    let contactListItems;\n    if (this.state.contacts) {\n      // Map over the Users and get an element for each of them\n      contactListItems = this.state.contacts.map(contact => getContactListItem(contact));\n    }\n    return (\n      <div>\n        <ListGroup>\n          {contactListItems}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nexport default ContactsComponent;\n"]}