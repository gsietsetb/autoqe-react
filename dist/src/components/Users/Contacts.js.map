{
  "version": 3,
  "sources": [
    "../../../../src/components/Users/Contacts.js"
  ],
  "names": [
    "getContactListItem",
    "contact",
    "id",
    "ContactsComponent",
    "state",
    "contacts",
    "onChange",
    "bind",
    "addChangeListener",
    "recieveContacts",
    "removeChangeListener",
    "setState",
    "getContacts",
    "contactListItems",
    "map"
  ],
  "mappings": ";;;;;;;;AAAA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;AAHA;;;AAKA;AACA;AACA,SAASA,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,SACE;AACE,SAAKA,QAAQC,EADf;AAEE,aAASD;AAFX,IADF;AAMD;;IACKE,iB;;;AAEJ,+BAAc;AAAA;;AAEZ;AACA;AAHY;;AAIZ,UAAKC,KAAL,GAAa;AACXC,gBAAU;AAEZ;AACA;AAJa,KAAb,CAKA,MAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AATY;AAUb;;;;yCAEoB;AACnB,6BAAaC,iBAAb,CAA+B,KAAKF,QAApC;AACD;;;wCAEmB;AAClB,+BAAeG,eAAf;AACD;;;2CAEsB;AACrB,6BAAaC,oBAAb,CAAkC,KAAKJ,QAAvC;AACD;;;+BAEU;AACT,WAAKK,QAAL,CAAc;AACZN,kBAAU,uBAAaO,WAAb;AADE,OAAd;AAGD;;;6BAEQ;AACP,UAAIC,yBAAJ;AACA,UAAI,KAAKT,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACAQ,2BAAmB,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwB;AAAA,iBAAWd,mBAAmBC,OAAnB,CAAX;AAAA,SAAxB,CAAnB;AACD;AACD,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AACGY;AADH;AADF,OADF;AAOD;;;;;;kBAGYV,iB",
  "file": "Contacts.js",
  "sourcesContent": [
    "import React, { Component } from 'react';\nimport { ListGroup } from 'react-bootstrap';\n// import { Link } from 'react-router';\nimport ContactActions from '../../actions/ContactActions';\nimport ContactStore from '../../stores/ContactStore';\nimport ContactListItem from './ContactListItem';\n\n// We'll use this function to get a contact\n// list item for each of the Users in our list\nfunction getContactListItem(contact) {\n  return (\n    <ContactListItem\n      key={contact.id}\n      contact={contact}\n    />\n  );\n}\nclass ContactsComponent extends Component {\n\n  constructor() {\n    super();\n    // For our initial state, we just want\n    // an empty array of Users\n    this.state = {\n      contacts: []\n    }\n    // We need to bind this to onChange so we can have\n    // the proper this reference inside the method\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    ContactStore.addChangeListener(this.onChange);\n  }\n\n  componentDidMount() {\n    ContactActions.recieveContacts();\n  }\n\n  componentWillUnmount() {\n    ContactStore.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      contacts: ContactStore.getContacts()\n    });\n  }\n\n  render() {\n    let contactListItems;\n    if (this.state.contacts) {\n      // Map over the Users and get an element for each of them\n      contactListItems = this.state.contacts.map(contact => getContactListItem(contact));\n    }\n    return (\n      <div>\n        <ListGroup>\n          {contactListItems}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nexport default ContactsComponent;\n"
  ]
}