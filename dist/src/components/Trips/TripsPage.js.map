{
  "version": 3,
  "sources": [
    "../../../../src/components/Trips/TripsPage.js"
  ],
  "names": [
    "actions",
    "TripsPage",
    "props",
    "trips",
    "id",
    "loadTrips",
    "console",
    "log",
    "JSON",
    "stringify",
    "display",
    "float",
    "Component",
    "propTypes",
    "array",
    "isRequired",
    "children",
    "object",
    "mapStateToProps",
    "state",
    "ownProps",
    "length",
    "from",
    "to",
    "price",
    "username",
    "car",
    "mapDispatchToProps",
    "dispatch"
  ],
  "mappings": ";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;IAAYA,O;;AACZ;;AACA;;;;;;;;;;;;;;IAEMC,S;;;;;;;;;;;6CACmB;AACjB,gBAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,EAApB,KAA2B,EAA/B,EAAmC;AAC/B,qBAAKF,KAAL,CAAWF,OAAX,CAAmBK,SAAnB;AACH;AACJ;;;iCAEQ;AACL,gBAAMF,QAAQ,KAAKD,KAAL,CAAWC,KAAzB;AACAG,oBAAQC,GAAR,CAAY,mBAAmBC,KAAKC,SAAL,CAAeN,KAAf,CAA/B;AACA,mBACI;AAAA;AAAA;AACI;AAAA;AAAA,sBAAS,WAAU,mBAAnB;AACI;AAAA;AAAA,0BAAO,iBAAP,EAAmB,qBAAnB,EAAmC,QAAQ;AAAA;AAAA;AAChC,uEAAK,qBAAL,EAAgB,QAAQ,EAAxB,GADgC;AAAA;AAEhC;AAAA;AAAA,sCAAI,OAAO,EAACO,SAAS,QAAV,EAAX;AAAA;AACI,+FAAW,OAAM,iBAAjB;AADJ,iCAFgC;AAKhC;AAAA;AAAA,sCAAM,IAAI,YAAV;AAAwB;AAAA;AAAA,0CAAQ,OAAO,EAACC,OAAO,OAAR,EAAf,EAAiC,MAAK,QAAtC,EAA+C,SAAQ,SAAvD;AACpB,mGAAW,OAAM,WAAjB,GADoB;AAAA;AAAA;AAAxB;AALgC,6BAA3C;AAUI;AAAA;AAAA,8BAAW,UAAX;AACI;AAAA;AAAA;AACI,oFAAU,OAAOR,KAAjB;AADJ;AADJ;AAVJ;AADJ;AADJ,aADJ;AAsBH;;;;EAhCmB,gBAAMS,S;;AAmC9BX,UAAUY,SAAV,GAAsB;AAClBV,WAAO,iBAAUW,KAAV,CAAgBC,UADL;AAElBC,cAAU,iBAAUC;AAFF,CAAtB;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACtC,QAAID,MAAMhB,KAAN,CAAYkB,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,eAAO;AACHlB,mBAAOgB,MAAMhB;AADV,SAAP;AAGH,KAJD,MAIO;AACH,eAAO;AACHA,mBAAO,CAAC,EAACC,IAAI,EAAL,EAASkB,MAAM,EAAf,EAAmBC,IAAI,EAAvB,EAA2BC,OAAO,EAAlC,EAAsCC,UAAU,EAAhD,EAAoDC,KAAK,EAAzD,EAAD;AADJ,SAAP;AAGH;AACJ;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,WAAO,EAAC5B,SAAS,+BAAmBA,OAAnB,EAA4B4B,QAA5B,CAAV,EAAP;AACH;;kBAEc,yBAAQV,eAAR,EAAyBS,kBAAzB,EAA6C1B,SAA7C,C",
  "file": "TripsPage.js",
  "sourcesContent": [
    "import React, {PropTypes} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport TripList from './TripList';\nimport * as actions from '../../actions/TripActions'\nimport {Button, Glyphicon, ListGroup, ListGroupItem, Panel} from 'react-bootstrap';\nimport trip from \"../../img/logo/carp_g.svg\";\n\nclass TripsPage extends React.Component {\n    componentWillMount() {\n        if (this.props.trips[0].id === '') {\n            this.props.actions.loadTrips();\n        }\n    }\n\n    render() {\n        const trips = this.props.trips;\n        console.log('this is here: ' + JSON.stringify(trips));\n        return (\n            <div>\n                <section className=\"section Container\">\n                    <Panel collapsible defaultExpanded header={<div>\n                               <img src={trip} height={40}/> &nbsp;\n                               <h3 style={{display: 'inline'}}> Ãšltimos viajes publicados: &nbsp; &nbsp;\n                                   <Glyphicon glyph=\"triangle-bottom\"/>\n                               </h3>\n                               <Link to={'/trips/new'}><Button style={{float: 'right'}} type=\"submit\" bsStyle=\"primary\">\n                                   <Glyphicon glyph=\"plus-sign\"/> &nbsp; Publicar viaje\n                               </Button>\n                               </Link>\n                           </div>}>\n                        <ListGroup fill>\n                            <ListGroupItem>\n                                <TripList trips={trips}/>\n                            </ListGroupItem>\n                        </ListGroup>\n                    </Panel>\n                </section>\n            </div>\n        );\n    }\n}\n\nTripsPage.propTypes = {\n    trips: PropTypes.array.isRequired,\n    children: PropTypes.object\n};\n\n// function mapStateToProps(state, ownProps) {\n//     // let trip = {id: '', from: '', to: '', price: '', username: '', car: []};\n//     // const tripId = ownProps.params.id;\n//     // if (state.trips.length > 0) {\n//     //     trip = Object.assign({}, state.trips.find(trip => trip.id  id)\n//     // }\n//     return {trip: state.trips};\n// }\n\nfunction mapStateToProps(state, ownProps) {\n    if (state.trips.length > 0) {\n        return {\n            trips: state.trips\n        };\n    } else {\n        return {\n            trips: [{id: '', from: '', to: '', price: '', username: '', car: []}]\n        }\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {actions: bindActionCreators(actions, dispatch)}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TripsPage);"
  ]
}