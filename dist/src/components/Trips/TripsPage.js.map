{"version":3,"sources":["../../../../src/components/Trips/TripsPage.js"],"names":["actions","TripsPage","props","trips","id","loadTrips","console","log","JSON","stringify","textAlign","children","Component","propTypes","array","isRequired","object","mapStateToProps","state","ownProps","length","from","to","price","username","car","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;AAEA;;IAAYA,O;;;;;;;;;;;;IAENC,S;;;;;;;;;;;6CACmB;AACjB,gBAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,EAApB,KAA2B,EAA/B,EAAmC;AAC/B,qBAAKF,KAAL,CAAWF,OAAX,CAAmBK,SAAnB;AACH;AACJ;;;iCAEQ;AACL,gBAAMF,QAAQ,KAAKD,KAAL,CAAWC,KAAzB;AACAG,oBAAQC,GAAR,CAAY,mBAAmBC,KAAKC,SAAL,CAAeN,KAAf,CAA/B;AACA,mBACI;AAAA;AAAA;AACI;AAAA;AAAA,sBAAI,OAAO,EAACO,WAAW,QAAZ,EAAX;AAAA;AACI;AAAA;AAAA,0BAAM,IAAI,YAAV;AAAwB;AAAA;AAAA,8BAAQ,MAAK,QAAb,EAAsB,WAAU,UAAhC;AACpB,uFAAW,OAAM,WAAjB,GADoB;AAAA;AAAA;AAAxB;AADJ,iBADJ;AAUI,oEAAU,OAAOP,KAAjB,GAVJ;AAaK,qBAAKD,KAAL,CAAWS;AAbhB,aADJ;AAkBH;;;;EA5BmB,gBAAMC,S;;AA+B9BX,UAAUY,SAAV,GAAsB;AAClBV,WAAO,iBAAUW,KAAV,CAAgBC,UADL;AAElBJ,cAAU,iBAAUK;AAFF,CAAtB;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACtC,QAAID,MAAMf,KAAN,CAAYiB,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,eAAO;AACHjB,mBAAOe,MAAMf;AADV,SAAP;AAGH,KAJD,MAIO;AACH,eAAO;AACHA,mBAAO,CAAC,EAACC,IAAI,EAAL,EAASiB,MAAM,EAAf,EAAmBC,IAAI,EAAvB,EAA2BC,OAAO,EAAlC,EAAsCC,UAAU,EAAhD,EAAoDC,KAAK,EAAzD,EAAD;AADJ,SAAP;AAGH;AACJ;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,WAAO,EAAC3B,SAAS,+BAAmBA,OAAnB,EAA4B2B,QAA5B,CAAV,EAAP;AACH;;kBAEc,yBAAQV,eAAR,EAAyBS,kBAAzB,EAA6CzB,SAA7C,C","file":"TripsPage.js","sourcesContent":["import React, {PropTypes} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport TripList from './TripList';\nimport {Button, Glyphicon} from 'react-bootstrap';\n\nimport * as actions from '../../actions/TripActions'\n\nclass TripsPage extends React.Component {\n    componentWillMount() {\n        if (this.props.trips[0].id === '') {\n            this.props.actions.loadTrips();\n        }\n    }\n\n    render() {\n        const trips = this.props.trips;\n        console.log('this is here: ' + JSON.stringify(trips));\n        return (\n            <div>\n                <h2 style={{textAlign: 'center'}}>Últimos viajes públicados: &nbsp; &nbsp;\n                    <Link to={'/trips/new'}><Button type=\"submit\" className=\"btn-fine\">\n                        <Glyphicon glyph=\"plus-sign\"/> &nbsp; Publicar viaje\n                    </Button>\n                    </Link>\n                    {/*<Button className=\"btn-fine\" >*/}\n                    {/*<Link to={'/trips/new'} >+ Publicar viaje</Link></Button>*/}\n                </h2>\n                {/*<div className=\"col-md-4\">*/}\n                <TripList trips={trips}/>\n                {/*</div>*/}\n                {/*<div className=\"col-md-8\">*/}\n                {this.props.children}\n                {/*</div>*/}\n            </div>\n        );\n    }\n}\n\nTripsPage.propTypes = {\n    trips: PropTypes.array.isRequired,\n    children: PropTypes.object\n};\n\n// function mapStateToProps(state, ownProps) {\n//     // let trip = {id: '', from: '', to: '', price: '', username: '', car: []};\n//     // const tripId = ownProps.params.id;\n//     // if (state.trips.length > 0) {\n//     //     trip = Object.assign({}, state.trips.find(trip => trip.id  id)\n//     // }\n//     return {trip: state.trips};\n// }\n\nfunction mapStateToProps(state, ownProps) {\n    if (state.trips.length > 0) {\n        return {\n            trips: state.trips\n        };\n    } else {\n        return {\n            trips: [{id: '', from: '', to: '', price: '', username: '', car: []}]\n        }\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {actions: bindActionCreators(actions, dispatch)}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TripsPage);"]}