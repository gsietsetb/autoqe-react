{"version":3,"sources":["../../../../src/components/Trips/NewTripPage.js"],"names":["courseActions","NewTripPage","props","state","trip","name","breed","weight","temperament","hobby_ids","saving","saveTrip","bind","updateTripHobbies","updateTripState","event","hobbyId","target","value","hobby","checkBoxHobbies","filter","id","checked","push","splice","indexOf","setState","field","preventDefault","actions","createTrip","Component","hobbiesForCheckBoxes","hobbies","map","propTypes","array","isRequired","object","mapStateToProps","ownProps","length","Object","assign","mapDispatchToProps","dispatch"],"mappings":"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","file":"NewTripPage.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\"\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {browserHistory} from 'react-router-dom';\nimport * as courseActions from '../../actions/TripActions';\nimport TripForm from './TripForm';\n\n\nclass NewTripPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            trip: {name: '', breed: '', weight: '', temperament: '', hobby_ids: []},\n            saving: false\n        };\n        this.saveTrip = this.saveTrip.bind(this);\n        this.updateTripHobbies = this.updateTripHobbies.bind(this);\n        this.updateTripState = this.updateTripState.bind(this);\n    }\n\n    updateTripHobbies(event) {\n        const trip = this.state.trip;\n        const hobbyId = event.target.value;\n        const hobby = this.props.checkBoxHobbies.filter(hobby => hobby.id === hobbyId)[0];\n        const checked = !hobby.checked;\n        hobby['checked'] = !hobby.checked;\n        if (checked) {\n            trip.hobby_ids.push(hobby.id);\n        } else {\n            trip.hobby_ids.splice(trip.hobby_ids.indexOf(hobby.id));\n        }\n\n        this.setState({trip: trip});\n    }\n\n    updateTripState(event) {\n        const field = event.target.name;\n        const trip = this.state.trip;\n        trip[field] = event.target.value;\n        return this.setState({trip: trip});\n    }\n\n    saveTrip(event) {\n        event.preventDefault();\n        this.props.actions.createTrip(this.state.trip)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>new trip</h1>\n                <TripForm\n                    trip={this.state.trip}\n                    hobbies={this.props.checkBoxHobbies}\n                    onSave={this.saveTrip}\n                    onChange={this.updateTripState}\n                    onHobbyChange={this.updateTripHobbies}/>\n            </div>\n        );\n    }\n}\n\nfunction hobbiesForCheckBoxes(hobbies) {\n    return hobbies.map(hobby => {\n        hobby['checked'] = false;\n        return hobby;\n    });\n}\n\nNewTripPage.propTypes = {\n    checkBoxHobbies: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired\n};\n\n\n\nfunction mapStateToProps(state, ownProps) {\n    let checkBoxHobbies = [];\n    if (state.hobbies.length > 0) {\n        checkBoxHobbies = hobbiesForCheckBoxes(Object.assign([], state.hobbies));\n    }\n\n    return {\n        checkBoxHobbies: checkBoxHobbies\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators(courseActions, dispatch)\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTripPage);"]}