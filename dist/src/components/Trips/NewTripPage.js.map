{"version":3,"sources":["../../../../src/components/Trips/NewTripPage.js"],"names":["courseActions","NewTripPage","props","state","trip","from","to","price","seats","passenger_ids","saving","console","log","saveTrip","bind","updateTripPassengers","updateTripState","event","passengerId","target","value","passenger","checkBoxPassengers","filter","id","checked","push","splice","indexOf","setState","field","name","preventDefault","actions","createTrip","Component","passengersForCheckBoxes","passengers","map","propTypes","array","isRequired","object","mapStateToProps","ownProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"NewTripPage.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\"\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as courseActions from '../../actions/TripActions';\nimport TripForm from './TripForm';\n\nimport giant from \"../../img/mockup/autoqe_mockup.png\"\n\nclass NewTripPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            trip: {from: '', to: '', price: '', seats: '', passenger_ids: []},\n            saving: false\n        };\n        console.log(\"im trying to build something new, damn!\");\n        // this.redirect = this.redirect.bind(this);\n        this.saveTrip = this.saveTrip.bind(this);\n        this.updateTripPassengers = this.updateTripPassengers.bind(this);\n        this.updateTripState = this.updateTripState.bind(this);\n    }\n\n    updateTripPassengers(event) {\n        const trip = this.state.trip;\n        const passengerId = event.target.value;\n        const passenger = this.props.checkBoxPassengers.filter(passenger => passenger.id === passengerId)[0];\n        const checked = !passenger.checked;\n        passenger['checked'] = !passenger.checked;\n        if (checked) {\n            trip.passenger_ids.push(passenger.id);\n        } else {\n            trip.passenger_ids.splice(trip.passenger_ids.indexOf(passenger.id));\n        }\n\n        this.setState({trip: trip});\n    }\n\n    updateTripState(event) {\n        const field = event.target.name;\n        const trip = this.state.trip;\n        trip[field] = event.target.value;\n        return this.setState({trip: trip});\n    }\n\n    saveTrip(event) {\n        event.preventDefault();\n        this.props.actions.createTrip(this.state.trip)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>AÃ±adir viaje</h1>\n                <img height='100%' src={giant}/>\n                <TripForm\n                    // trip={this.state.trip}\n                    passengers={this.props.checkBoxPassengers}\n                    onSave={this.saveTrip}\n                    onChange={this.updateTripState}\n                    // onPassengerChange={this.updateTripPassengers}\n                />\n            </div>\n        );\n    }\n}\n\nfunction passengersForCheckBoxes(passengers) {\n    return passengers.map(passenger => {\n        passenger['checked'] = false;\n        return passenger;\n    });\n}\n\nNewTripPage.propTypes = {\n    checkBoxPassengers: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired\n};\n\n\nfunction mapStateToProps(state, ownProps) {\n    // let checkBoxPassengers = [];\n    // if (state.user.length > 0) {\n    //     checkBoxPassengers = passengersForCheckBoxes(Object.assign([], state.passengers));\n    // }\n    //\n    // return {\n    //     checkBoxPassengers: checkBoxPassengers\n    // };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators(courseActions, dispatch)\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTripPage);\n// export default connect(mapStateToProps)(NewTripPage);"]}