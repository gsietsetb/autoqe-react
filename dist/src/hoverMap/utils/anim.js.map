{"version":3,"sources":["../../../../src/hoverMap/utils/anim.js"],"names":["deltaT","from","to","easeName","callback","dtStart","Date","getTime","easingFn","easing","canRun","runner","t","Math","min","x","raf","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cb","setTimeout","require"],"mappings":";;;;;;kBAQe,UAASA,MAAT,EAAiBC,IAAjB,EAAuBC,EAAvB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA+C;AAC5D,MAAMC,UAAW,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAhB;AACA,MAAMC,WAAWC,OAAON,QAAP,CAAjB;AACA,MAAIO,SAAS,IAAb;;AAEA,MAAMC,SAAS,SAATA,MAAS,GAAM;AACnB,QAAMC,IAAIC,KAAKC,GAAL,CAAS,CAAE,IAAIR,IAAJ,EAAD,CAAaC,OAAb,KAAyBF,OAA1B,IAAqCL,MAA9C,EAAsD,CAAtD,CAAV;AACA,QAAMe,IAAIP,SAASI,CAAT,EAAYX,IAAZ,EAAkBC,EAAlB,CAAV;AACA,QAAIQ,UAAUN,SAASW,CAAT,EAAYH,CAAZ,CAAd,EAA8B;AAC5B,UAAIA,IAAI,CAAR,EAAW;AACT,YAAII,GAAJ,EAASA,IAAIL,MAAJ;AACV;AACF;AACF,GARD;;AAUA,MAAIK,GAAJ,EAAS;AACPA,QAAIL,MAAJ;AACD,GAFD,MAEO;AACLA;AACD;;AAED,SAAO,YAAM;AACXD,aAAS,KAAT;AACD,GAFD;AAGD,C;;AAhCD,IAAMM,MAAO,OAAOC,MAAP,KAAkB,WAAnB,KAAoCA,OAAOC,qBAAP,IAC9CD,OAAOE,2BADuC,IAE9CF,OAAOG,wBAFuC,IAG9CH,OAAOI,uBAHuC,IAI7C,UAACC,EAAD,EAAQ;AAAE,SAAOL,OAAOM,UAAP,CAAkBD,EAAlB,EAAsB,OAAO,EAA7B,CAAP;AAA0C,CAJ3C,CAAZ;;AAMA,IAAMb,SAASe,QAAQ,cAAR,CAAf","file":"anim.js","sourcesContent":["const raf = (typeof window !== 'undefined') && (window.requestAnimationFrame ||\n  window.webkitRequestAnimationFrame ||\n  window.mozRequestAnimationFrame ||\n  window.msRequestAnimationFrame ||\n  ((cb) => { return window.setTimeout(cb, 1000 / 60); }));\n\nconst easing = require('utils/easing');\n\nexport default function(deltaT, from, to, easeName, callback) {\n  const dtStart = (new Date()).getTime();\n  const easingFn = easing[easeName];\n  let canRun = true;\n\n  const runner = () => {\n    const t = Math.min(((new Date()).getTime() - dtStart) / deltaT, 1);\n    const x = easingFn(t, from, to);\n    if (canRun && callback(x, t)) {\n      if (t < 1) {\n        if (raf) raf(runner);\n      }\n    }\n  };\n\n  if (raf) {\n    raf(runner);\n  } else {\n    runner();\n  }\n\n  return () => {\n    canRun = false;\n  };\n}\n"]}