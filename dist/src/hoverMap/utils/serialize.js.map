{"version":3,"sources":["../../../../src/hoverMap/utils/serialize.js"],"names":["serialize","deserialize","isImmutable","x","hashCode","equals","state","res","key","hasOwnProperty","obj","__immutable__","value","toJSON","JSON","stringify","val","dObj","parse","fromJS"],"mappings":";;;;;QAUgBA,S,GAAAA,S;QAkBAC,W,GAAAA,W;;AA5BhB;;;;;;AAEA,SAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtB,MAAIA,KAAKA,EAAEC,QAAP,IAAmB,OAAOD,EAAEC,QAAT,KAAsB,UAAzC,IACFD,EAAEE,MADA,IACU,OAAOF,EAAEE,MAAT,KAAoB,UADlC,EAC8C;AAC5C,WAAO,IAAP;AACD;AACD,SAAO,KAAP;AACD;;AAEM,SAASL,SAAT,CAAmBM,KAAnB,EAA0B;AAC/B,MAAIC,MAAM,EAAV;AACA,OAAK,IAAIC,GAAT,IAAgBF,KAAhB,EAAuB;AACrB,QAAI,CAACA,MAAMG,cAAN,CAAqBD,GAArB,CAAL,EAAgC;AAChC,QAAME,MAAMJ,MAAME,GAAN,CAAZ;AACA,QAAIN,YAAYQ,GAAZ,CAAJ,EAAsB;AACpBH,UAAIC,GAAJ,IAAW;AACTG,uBAAe,IADN;AAETC,eAAOF,IAAIG,MAAJ;AAFE,OAAX;AAID,KALD,MAKO;AACLN,UAAIC,GAAJ,IAAWE,GAAX;AACD;AACF;;AAED,SAAOI,KAAKC,SAAL,CAAeR,GAAf,CAAP;AACD;;AAEM,SAASN,WAAT,CAAqBe,GAArB,EAA0B;AAC/B,MAAMC,OAAOH,KAAKI,KAAL,CAAWF,GAAX,CAAb;AACA,MAAMV,QAAQ,EAAd;AACA,OAAK,IAAIE,GAAT,IAAgBS,IAAhB,EAAsB;AACpB,QAAI,CAACA,KAAKR,cAAL,CAAoBD,GAApB,CAAL,EAA+B;AAC/B,QAAME,MAAMO,KAAKT,GAAL,CAAZ;AACA,QAAIE,OAAOA,IAAIC,aAAJ,KAAsB,IAAjC,EAAuC;AACrCL,YAAME,GAAN,IAAa,oBAAUW,MAAV,CAAiBT,IAAIE,KAArB,CAAb;AACD,KAFD,MAEO;AACLN,YAAME,GAAN,IAAaE,GAAb;AACD;AACF;;AAED,SAAOJ,KAAP;AACD","file":"serialize.js","sourcesContent":["import immutable from 'immutable';\n\nfunction isImmutable(x) {\n  if (x && x.hashCode && typeof x.hashCode === 'function' &&\n    x.equals && typeof x.equals === 'function') {\n    return true;\n  }\n  return false;\n}\n\nexport function serialize(state) {\n  let res = {};\n  for (let key in state) {\n    if (!state.hasOwnProperty(key)) continue;\n    const obj = state[key];\n    if (isImmutable(obj)) {\n      res[key] = {\n        __immutable__: true,\n        value: obj.toJSON()\n      };\n    } else {\n      res[key] = obj;\n    }\n  }\n\n  return JSON.stringify(res);\n}\n\nexport function deserialize(val) {\n  const dObj = JSON.parse(val);\n  const state = {};\n  for (let key in dObj) {\n    if (!dObj.hasOwnProperty(key)) continue;\n    const obj = dObj[key];\n    if (obj && obj.__immutable__ === true) {\n      state[key] = immutable.fromJS(obj.value);\n    } else {\n      state[key] = obj;\n    }\n  }\n\n  return state;\n}\n"]}