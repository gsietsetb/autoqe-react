{"version":3,"sources":["../../../../src/hoverMap/actions/user_routes.js"],"names":["changeRoute","K_DEFAULT_ROUTE","K_SERVER_PATH","K_MAP_ROUTE","K_NO_ROUTE","routes_","arg","console","log","routeParams","count","seed","test","latVarM","lngVarM","typeGetter","example","balderdash","i","cacheBreaker","title","info","source","next","prev","routeName","routePath","routeFullPath","type","params","actions","Error"],"mappings":";;;;;;;;;;;AAMA;;;QAuCgBA,W,GAAAA,W;;AA7ChB;;;;AAEA;;AAEA;;;;AAGA;;AACA;;AACA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;;AAEO,IAAMC,4CAAkB,gBAAGC,aAAH,GAAmB,GAA3C;AACA,IAAMC,oCAAc,gBAAGD,aAAH,GAAmB,sBAAvC;AACA,IAAME,kCAAa,GAAnB;;AAEP,IAAMC,oDACHJ,eADG,EACe,CACjB,UAACK,GAAD;AAAA,SAAUC,QAAQC,GAAR,CAAYF,GAAZ,GAAkB,EAA5B;AAAA,CADiB,CACe;AADf,CADf,6BAKHH,WALG,EAKW,CACb;AAAA,MAAEM,WAAF,QAAEA,WAAF;AAAA,SAAmB,wBAAM;AACvBC,WAAO,IADgB,EACVC,MAAM,CADI,EACDC,MAAM,KADL,EACYC,SAAS,CADrB,EACwBC,SAAS,GADjC;AAEvBC,gBAAYN,YAAYO,OAAZ,KAAwB,uBAASC,UAAjC,GAA8C;AAAA,aAAKC,IAAI,CAAT;AAAA,KAA9C,GAA2D;AAAA,aAAKA,IAAI,CAAT;AAAA,KAFhD;AAGvBC,kBAAcV,YAAYO,OAAZ,KAAwB,uBAASC,UAAjC,GAA8C,CAA9C,GAAkD;AAHzC,GAAN,CAAnB;AAAA,CADa,EAOb;AAAA,MAAER,WAAF,SAAEA,WAAF;AAAA,SAAmB,iDAAiBW,OAAO,EAAxB,EAA4BC,MAAM,EAAlC,EAAsCC,QAAQ,EAA9C,EAAkDC,MAAM,EAAxD,EAA4DC,MAAM,EAAlE,IAAyE,uBAAYf,YAAYO,OAAxB,CAAzE,EAAnB;AAAA,CAPa,CALX,6BAeHZ,UAfG,EAeU,CACZ;AAAA,SAAO,CAAC,oDAAD,CAAP;AAAA,CADY,CACmD;AADnD,CAfV,YAAN;;AAoBA;AACA;AACA;AACA;AACO,SAASJ,WAAT,QAAyE;AAAA,MAAnDyB,SAAmD,SAAnDA,SAAmD;AAAA,MAAxCC,SAAwC,SAAxCA,SAAwC;AAAA,MAA7BjB,WAA6B,SAA7BA,WAA6B;AAAA,MAAhBkB,aAAgB,SAAhBA,aAAgB;;AAC9E,MAAID,aAAarB,OAAjB,EAA0B;AACxB,WAAO;AACLuB,4CADK;AAELC,cAAQ,EAACJ,oBAAD,EAAYC,oBAAZ,EAAuBjB,wBAAvB,EAAoCkB,4BAApC,EAFH;AAGLG,4CAAazB,QAAQqB,SAAR,CAAb;AAHK,KAAP;AAKD;;AAED;AACA,QAAM,IAAIK,KAAJ,CAAU,eAAV,CAAN;AACD","file":"user_routes.js","sourcesContent":["import sc from '../consts/index.js';\n\nimport {MULTI_ACTION} from '../consts/multi_action_types.js';\n\nimport exampleDefs, {examples} from '../consts/example_defs.js';\n\n// import any action creators you need to call on onRouteChange\nimport { initExampleInfo } from './example_actions.js';\nimport {query} from './map_actions.js';\nimport { updateRoute } from './router_actions.js';\n\n// -----------------------------------------------------------------------\n// ROUTING TABLE AND CONSTANTS -------------------------------------------\n// -----------------------------------------------------------------------\n// call multiple action creators on route match\n// look at middlewares/multi_action_middleware.js\n\nexport const K_DEFAULT_ROUTE = sc.K_SERVER_PATH + '/';\nexport const K_MAP_ROUTE = sc.K_SERVER_PATH + '/map/:example/:zoom?';\nexport const K_NO_ROUTE = '*';\n\nconst routes_ = {\n  [K_DEFAULT_ROUTE]: [\n    (arg) => (console.log(arg), {}) // eslint-disable-line no-console\n  ],\n\n  [K_MAP_ROUTE]: [\n    ({routeParams}) => query({\n      count: 1000, seed: 7, test: false, latVarM: 2, lngVarM: 4.5,\n      typeGetter: routeParams.example === examples.balderdash ? i => i % 6 : i => i % 2,\n      cacheBreaker: routeParams.example === examples.balderdash ? 6 : 2\n    }),\n\n    ({routeParams}) => initExampleInfo({title: '', info: '', source: '', next: '', prev: '', ...exampleDefs[routeParams.example]})\n  ],\n\n  [K_NO_ROUTE]: [\n    () => ({/*init a big red alert store about route not found*/}) // eslint-disable-line no-console\n  ]\n};\n\n// onRouteChange calback is just an this action (use any router you like, TODO add @koistya hashchange router)\n// params for K_MAP_ROUTE = '/map/:example/:zoom?' and real route `/map/simple` will be\n// {routeName: \"K_MAP_ROUTE\", routePath: \"/map/:example/:zoom?\",\n//  routeParams: {example: \"simple\", zoom: undefined}, routeFullPath: \"/map/simple\"}\nexport function changeRoute({routeName, routePath, routeParams, routeFullPath}) {\n  if (routePath in routes_) {\n    return {\n      type: MULTI_ACTION,\n      params: {routeName, routePath, routeParams, routeFullPath},\n      actions: [...routes_[routePath], updateRoute]\n    };\n  }\n\n  // TODO return updateRoute and add 404\n  throw new Error('Unknown route');\n}\n"]}