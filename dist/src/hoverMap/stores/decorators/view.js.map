{"version":3,"sources":["../../../../../src/hoverMap/stores/decorators/view.js"],"names":["view","hashCode_","str","hash","i","chr","len","length","charCodeAt","log2_","val","Math","log","LN2","memoize_","stateParams","options","this_","Object","assign","stateHolder","cacheSizePower","expireMs","maxItemsPerHash","cacheSize","cacheSizePowerCalc","round","cacheSizeCalc","pow","cache_","Array","mask_","peek","im","hashArray","item","find","v","undefined","currDt","Date","getTime","dt","currentState","reduce","memo","propName","state","index","indexOf","splice","put","result","sortBy","shift","push","args","JSON","stringify","toString","r","fn","apply","target","key","descriptor","configurable","get","classMethod","value","call","Error","classMethodBinded","bind","viewFn","defineProperty","writable"],"mappings":"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","file":"view.js","sourcesContent":["/* IT's better not to use this decorator at all, and move all view like methods to pure functions (and just memoize pure function)\n * -------------------------------------------------------------------------------------------------------------------------------\n * view decorator of class methods,\n * depends on object state params,\n * works like view in databases\n * memoizes 'function call result' until some depending state parameters changed\n * for example in store you have\n * state = {param1: immutable.Map({bla bla}), param2: immutable.BlaBla(), ... , paramN }\n * you can write store method\n * @view(['param1', 'param2'])\n * getSomething() {\n *   big long calculations\n * }\n *\n * getSomething memoizes cals to getSomething until param1 or param2 changed\n * without view you need to call something like update_() { 'big long calculations' } on every param1 or param2 in code changes,\n * you need to create additional state param for 'big long calculations result'\n */\n\nimport shallowEqual from 'react-pure-render-utils/shallowEqual';\n\nfunction hashCode_(str) {\n  let hash = 0;\n  let i;\n  let chr;\n  let len;\n  if (str.length === 0) return hash;\n  for (i = 0, len = str.length; i < len; i++) {\n    chr = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nfunction log2_(val) {\n  return Math.log(val) / Math.LN2;\n}\n\nfunction memoize_(stateParams, options, this_) {\n  return fn => {\n    const {cacheSizePower, expireMs, maxItemsPerHash, cacheSize, stateHolder} = Object.assign({stateHolder: 'state', cacheSizePower: 8, expireMs: 24 * 60 * 60 * 1000, maxItemsPerHash: 4}, options);\n\n    const cacheSizePowerCalc = Math.round((cacheSize && cacheSize > 2) ? log2_(cacheSize) : cacheSizePower);\n\n    const cacheSizeCalc = Math.pow(2, cacheSizePowerCalc);\n    const cache_ = new Array(cacheSizeCalc);\n    const mask_ = cacheSizeCalc - 1;\n\n    const peek = (hash, im) => {\n      if (hash in cache_) {\n        const hashArray = cache_[hash];\n        const item = hashArray.find(v => v.im === im);\n        if (item !== undefined) {\n          const currDt = (new Date()).getTime();\n          if (currDt - item.dt < expireMs) {\n            const currentState = stateParams.reduce((memo, propName) => {\n              memo[propName] = this_[stateHolder][propName];\n              return memo;\n            }, {});\n\n            if (shallowEqual(currentState, item.state)) {\n              return item;\n            }\n          }\n\n          const index = hashArray.indexOf(item);\n          hashArray.splice(index, 1);\n        }\n      }\n    };\n\n    const put = (hash, im, result) => {\n      if (!(hash in cache_)) cache_[hash] = [];\n      const hashArray = cache_[hash];\n      const currDt = (new Date()).getTime();\n\n      let item = peek(hash, im);\n\n      if (item !== undefined) {\n        item.dt = currDt;\n        item.result = result;\n        item.state = stateParams.reduce((memo, propName) => {\n          memo[propName] = this_[stateHolder][propName];\n          return memo;\n        }, {});\n        // пересортировать\n        cache_[hash] = hashArray.sortBy(v => v.dt);\n      } else {\n        item = {\n          dt: currDt,\n          im: im,\n          result: result,\n          state: stateParams.reduce((memo, propName) => {\n            memo[propName] = this_[stateHolder][propName];\n            return memo;\n          }, {})\n        };\n\n        if (hashArray.length >= maxItemsPerHash) {\n          hashArray.shift(); // убрать самый старый элемент\n        }\n        hashArray.push(item);\n      }\n    };\n\n    return (...args) => {\n      const im = JSON.stringify(args);\n      const hash = hashCode_(im.toString()) & mask_;\n\n      const item = peek(hash, im);\n\n      if (item !== undefined) { // есть в кеше вернем\n        return item.result;\n      }\n\n      const r = fn.apply(null, args);\n      put(hash, im, r);\n      return r;\n    };\n  };\n}\n\nexport default function view(stateParams, options) {\n  return (target, key, descriptor) => {\n    return {\n      configurable: true,\n      get() {\n        let classMethod = (typeof descriptor.get !== 'function') ? descriptor.value : descriptor.get.call(this);\n\n        if (typeof classMethod !== 'function') {\n          throw new Error(`@view decorator can only be applied to methods not: ${typeof classMethod}`);\n        }\n\n        let classMethodBinded = classMethod.bind(this);\n        let viewFn = memoize_(stateParams, options, this)(classMethodBinded); // serialize_(classMethodBinded, options);\n\n        Object.defineProperty(this, key, {\n          value: viewFn,\n          configurable: true,\n          writable: true\n        });\n\n        return viewFn;\n      }\n    };\n  };\n}\n"]}