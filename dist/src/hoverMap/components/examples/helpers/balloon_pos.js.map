{"version":3,"sources":["../../../../../../src/hoverMap/components/examples/helpers/balloon_pos.js"],"names":["getHintBaloonVerticalPosClass","getHintBaloonHorizontalPosStyle","getHintBottomOffsetClass","y","K_MAX_BALLOON_HEIGHT","x","markerWidth","markerOffset","mapWidth","K_BALLOON_WIDTH_BASE","K_BALLOON_MAP_OFFSET","K_BALLOON_WIDTH","Math","min","K_BALLOON_DEFAULT_OFFSET","offset","leftX","rightX","mapOffset","max","K_BALLOON_WIDTH_STYLE","width","left","marginLeft","K_HINT_ARROW_WIDTH","round"],"mappings":";;;;;QACgBA,6B,GAAAA,6B;QAKAC,+B,GAAAA,+B;QAwBAC,wB,GAAAA,wB;AA7BT,SAASF,6BAAT,CAAuCG,CAAvC,CAAyC,eAAzC,EAA0D;AAC/D,MAAMC,uBAAuB,GAA7B;AACA,SAAOD,IAAIC,oBAAJ,GAA2B,WAA3B,GAAyC,cAAhD;AACD;;AAEM,SAASH,+BAAT,CAAyCI,CAAzC,EAA4CC,WAA5C,EAAyDC,YAAzD,EAAuEC,QAAvE,EAAiF;AACtF,MAAMC,uBAAuB,GAA7B;AACA;AACA,MAAMC,uBAAuB,EAA7B;AACA;AACA,MAAMC,kBAAkBC,KAAKC,GAAL,CAASJ,oBAAT,EAA+BD,WAAW,IAAIE,oBAA9C,CAAxB;AACA;AACA,MAAMI,2BAA2BH,kBAAkB,IAAnD;AACA;AACA,MAAMI,SAAS,CAACD,wBAAD,GAA4BR,cAAc,GAAzD;AACA;AACA,MAAMU,QAAQX,IAAIU,MAAJ,GAAaT,cAAcC,YAAzC;AACA,MAAMU,SAASD,QAAQL,eAAvB;AACA;AACA,MAAMO,YAAYH,SAASH,KAAKC,GAAL,CAAS,CAAT,EAAaL,WAAWE,oBAAZ,GAAoCO,MAAhD,CAAT,GAAmEL,KAAKO,GAAL,CAAS,CAAT,EAAYT,uBAAuBM,KAAnC,CAArF;;AAEA,MAAMI,wBAAwB;AAC5BC,WAAUV,eAAV,OAD4B;AAE5BW,UAASJ,SAAT,OAF4B;AAG5BK,gBAAY;AAHgB,GAA9B;AAKA,SAAOH,qBAAP;AACD;;AAEM,SAASlB,wBAAT,CAAkCI,WAAlC,EAA+CC,YAA/C,EAA6D;AAClE,MAAMiB,qBAAqB,EAA3B;AACA,MAAMT,SAASH,KAAKa,KAAL,CAAW,EAAEnB,cAAc,CAAd,GAAkBkB,qBAAqB,CAAvC,GAA2CjB,eAAeD,WAA5D,CAAX,CAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,mCAAmCS,MAA1C;AACD","file":"balloon_pos.js","sourcesContent":["\nexport function getHintBaloonVerticalPosClass(y /*, mapHeight*/) {\n  const K_MAX_BALLOON_HEIGHT = 240;\n  return y > K_MAX_BALLOON_HEIGHT ? 'hint--top' : 'hint--bottom';\n}\n\nexport function getHintBaloonHorizontalPosStyle(x, markerWidth, markerOffset, mapWidth) {\n  const K_BALLOON_WIDTH_BASE = 250;\n  // offset from map side\n  const K_BALLOON_MAP_OFFSET = 10;\n  // balloon with not more than map width\n  const K_BALLOON_WIDTH = Math.min(K_BALLOON_WIDTH_BASE, mapWidth - 2 * K_BALLOON_MAP_OFFSET);\n  // default ballon offset from arrow center i want\n  const K_BALLOON_DEFAULT_OFFSET = K_BALLOON_WIDTH * 0.15;\n  // from corner\n  const offset = -K_BALLOON_DEFAULT_OFFSET + markerWidth * 0.5;\n  // overflow in px (marker assymetric)\n  const leftX = x + offset - markerWidth * markerOffset;\n  const rightX = leftX + K_BALLOON_WIDTH;\n  // recalc if overflow\n  const mapOffset = offset + Math.min(0, (mapWidth - K_BALLOON_MAP_OFFSET) - rightX) + Math.max(0, K_BALLOON_MAP_OFFSET - leftX);\n\n  const K_BALLOON_WIDTH_STYLE = {\n    width: `${K_BALLOON_WIDTH}px`,\n    left: `${mapOffset}px`,\n    marginLeft: '0px'\n  };\n  return K_BALLOON_WIDTH_STYLE;\n}\n\nexport function getHintBottomOffsetClass(markerWidth, markerOffset) {\n  const K_HINT_ARROW_WIDTH = 12;\n  const offset = Math.round(-(markerWidth / 2 + K_HINT_ARROW_WIDTH / 2 - markerOffset * markerWidth));\n  // if (__DEV__) {\n  //   if (offset < -40 || offset > 40) {\n  //     console.error('HintBottomOffset is out of range, extend range at sass/markers/map_marker.sass'); // eslint-disable-line no-console\n  //   }\n  // }\n  // classes generated at sass/markers/map_marker.sass\n  return 'map-marker--hint-bottom-delta-' + offset;\n}\n"]}