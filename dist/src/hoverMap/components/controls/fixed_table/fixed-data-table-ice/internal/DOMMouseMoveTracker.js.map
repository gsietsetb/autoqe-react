{"version":3,"sources":["../../../../../../../../src/hoverMap/components/controls/fixed_table/fixed-data-table-ice/internal/DOMMouseMoveTracker.js"],"names":["EventListener","require","cancelAnimationFramePolyfill","requestAnimationFramePolyfill","DOMMouseMoveTracker","onMove","onMoveEnd","domNode","$DOMMouseMoveTracker_isDragging","$DOMMouseMoveTracker_animationFrameID","$DOMMouseMoveTracker_domNode","$DOMMouseMoveTracker_onMove","$DOMMouseMoveTracker_onMoveEnd","$DOMMouseMoveTracker_onMouseMove","bind","$DOMMouseMoveTracker_onMouseUp","$DOMMouseMoveTracker_didMouseMove","prototype","captureMouseMoves","event","$DOMMouseMoveTracker_eventMoveToken","$DOMMouseMoveTracker_eventUpToken","listen","$DOMMouseMoveTracker_deltaX","$DOMMouseMoveTracker_deltaY","$DOMMouseMoveTracker_x","clientX","$DOMMouseMoveTracker_y","clientY","preventDefault","releaseMouseMoves","remove","isDragging","x","y","module","exports"],"mappings":"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","file":"DOMMouseMoveTracker.js","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMMouseMoveTracker\n * @typechecks\n */\n\n\"use strict\";\n\nvar EventListener = require('./EventListener');\n\nvar cancelAnimationFramePolyfill = require('./cancelAnimationFramePolyfill');\nvar requestAnimationFramePolyfill = require('./requestAnimationFramePolyfill');\n\n\n  /**\n   * onMove is the callback that will be called on every mouse move.\n   * onMoveEnd is called on mouse up when movement has ended.\n   */\n  function DOMMouseMoveTracker(\nonMove,\n    /*function*/ onMoveEnd,\n    /*DOMElement*/ domNode) {\n    this.$DOMMouseMoveTracker_isDragging = false;\n    this.$DOMMouseMoveTracker_animationFrameID = null;\n    this.$DOMMouseMoveTracker_domNode = domNode;\n    this.$DOMMouseMoveTracker_onMove = onMove;\n    this.$DOMMouseMoveTracker_onMoveEnd = onMoveEnd;\n    this.$DOMMouseMoveTracker_onMouseMove = this.$DOMMouseMoveTracker_onMouseMove.bind(this);\n    this.$DOMMouseMoveTracker_onMouseUp = this.$DOMMouseMoveTracker_onMouseUp.bind(this);\n    this.$DOMMouseMoveTracker_didMouseMove = this.$DOMMouseMoveTracker_didMouseMove.bind(this);\n  }\n\n  /**\n   * This is to set up the listeners for listening to mouse move\n   * and mouse up signaling the movement has ended. Please note that these\n   * listeners are added at the document.body level. It takes in an event\n   * in order to grab inital state.\n   */\n  DOMMouseMoveTracker.prototype.captureMouseMoves=function(event) {\n    if (!this.$DOMMouseMoveTracker_eventMoveToken && !this.$DOMMouseMoveTracker_eventUpToken) {\n      this.$DOMMouseMoveTracker_eventMoveToken = EventListener.listen(\n        this.$DOMMouseMoveTracker_domNode,\n        'mousemove',\n        this.$DOMMouseMoveTracker_onMouseMove\n      );\n      this.$DOMMouseMoveTracker_eventUpToken = EventListener.listen(\n        this.$DOMMouseMoveTracker_domNode,\n        'mouseup',\n        this.$DOMMouseMoveTracker_onMouseUp\n      );\n    }\n\n    if (!this.$DOMMouseMoveTracker_isDragging) {\n      this.$DOMMouseMoveTracker_deltaX = 0;\n      this.$DOMMouseMoveTracker_deltaY = 0;\n      this.$DOMMouseMoveTracker_isDragging = true;\n      this.$DOMMouseMoveTracker_x = event.clientX;\n      this.$DOMMouseMoveTracker_y = event.clientY;\n    }\n    event.preventDefault();\n  };\n\n  /**\n   * These releases all of the listeners on document.body.\n   */\n  DOMMouseMoveTracker.prototype.releaseMouseMoves=function() {\n    if (this.$DOMMouseMoveTracker_eventMoveToken && this.$DOMMouseMoveTracker_eventUpToken) {\n      this.$DOMMouseMoveTracker_eventMoveToken.remove();\n      this.$DOMMouseMoveTracker_eventMoveToken = null;\n      this.$DOMMouseMoveTracker_eventUpToken.remove();\n      this.$DOMMouseMoveTracker_eventUpToken = null;\n    }\n\n    if (this.$DOMMouseMoveTracker_animationFrameID !== null) {\n      cancelAnimationFramePolyfill(this.$DOMMouseMoveTracker_animationFrameID);\n      this.$DOMMouseMoveTracker_animationFrameID = null;\n    }\n\n    if (this.$DOMMouseMoveTracker_isDragging) {\n      this.$DOMMouseMoveTracker_isDragging = false;\n      this.$DOMMouseMoveTracker_x = null;\n      this.$DOMMouseMoveTracker_y = null;\n    }\n  };\n\n  /**\n   * Returns whether or not if the mouse movement is being tracked.\n   */\n  DOMMouseMoveTracker.prototype.isDragging=function() {\n    return this.$DOMMouseMoveTracker_isDragging;\n  };\n\n  /**\n   * Calls onMove passed into constructor and updates internal state.\n   */\n  DOMMouseMoveTracker.prototype.$DOMMouseMoveTracker_onMouseMove=function(event) {\n    var x = event.clientX;\n    var y = event.clientY;\n\n    this.$DOMMouseMoveTracker_deltaX += (x - this.$DOMMouseMoveTracker_x);\n    this.$DOMMouseMoveTracker_deltaY += (y - this.$DOMMouseMoveTracker_y);\n\n    if (this.$DOMMouseMoveTracker_animationFrameID === null) {\n      // The mouse may move faster then the animation frame does.\n      // Use `requestAnimationFramePolyfill` to avoid over-updating.\n      this.$DOMMouseMoveTracker_animationFrameID =\n        requestAnimationFramePolyfill(this.$DOMMouseMoveTracker_didMouseMove);\n    }\n\n    this.$DOMMouseMoveTracker_x = x;\n    this.$DOMMouseMoveTracker_y = y;\n    event.preventDefault();\n  };\n\n  DOMMouseMoveTracker.prototype.$DOMMouseMoveTracker_didMouseMove=function() {\n    this.$DOMMouseMoveTracker_animationFrameID = null;\n    this.$DOMMouseMoveTracker_onMove(this.$DOMMouseMoveTracker_deltaX, this.$DOMMouseMoveTracker_deltaY);\n    this.$DOMMouseMoveTracker_deltaX = 0;\n    this.$DOMMouseMoveTracker_deltaY = 0;\n  };\n\n  /**\n   * Calls onMoveEnd passed into constructor and updates internal state.\n   */\n  DOMMouseMoveTracker.prototype.$DOMMouseMoveTracker_onMouseUp=function() {\n    if (this.$DOMMouseMoveTracker_animationFrameID) {\n      this.$DOMMouseMoveTracker_didMouseMove();\n    }\n    this.$DOMMouseMoveTracker_onMoveEnd();\n  };\n\n\nmodule.exports = DOMMouseMoveTracker;\n"]}