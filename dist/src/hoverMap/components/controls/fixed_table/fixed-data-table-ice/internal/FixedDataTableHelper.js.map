{"version":3,"sources":["../../../../../../../../src/hoverMap/components/controls/fixed_table/fixed-data-table-ice/internal/FixedDataTableHelper.js"],"names":["Locale","require","React","FixedDataTableColumnGroup","FixedDataTableColumn","cloneWithProps","DIR_SIGN","isRTL","CELL_VISIBILITY_TOLERANCE","renderToString","value","undefined","String","forEachColumn","children","callback","Children","forEach","child","type","props","mapColumns","newChildren","originalChild","newChild","haveColumnsChanged","newColumns","originalcolumn","newColumn","push","FixedDataTableHelper","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;AAEA,IAAIA,SAASC,QAAQ,UAAR,CAAb;AACA,IAAIC,QAAQD,QAAQ,SAAR,CAAZ;AACA,IAAIE,4BAA4BF,QAAQ,mCAAR,CAAhC;AACA,IAAIG,uBAAuBH,QAAQ,8BAAR,CAA3B;;AAEA,IAAII,iBAAiBJ,QAAQ,kBAAR,CAArB;;AAEA,IAAIK,WAAYN,OAAOO,KAAP,KAAiB,CAAC,CAAlB,GAAsB,CAAC,CAAvC;AACA;AACA,IAAIC,4BAA4B,CAAhC,C,CAAmC;;AAEnC,SAASC,cAAT,CAAwBC,KAAxB,EAA+B,UAAW;AACxC,MAAIA,UAAU,IAAV,IAAkBA,UAAUC,SAAhC,EAA2C;AACzC,WAAO,EAAP;AACD,GAFD,MAEO;AACL,WAAOC,OAAOF,KAAP,CAAP;AACD;AACF;;AAED;;;;;;;;AAQA,SAASG,aAAT,CAAuBC,QAAvB,EAAiCC,QAAjC,EAA2C;AACzCb,QAAMc,QAAN,CAAeC,OAAf,CAAuBH,QAAvB,EAAiC,UAASI,KAAT,EAAiB;AAChD,QAAIA,MAAMC,IAAN,KAAehB,0BAA0BgB,IAA7C,EAAmD;AACjDN,oBAAcK,MAAME,KAAN,CAAYN,QAA1B,EAAoCC,QAApC;AACD,KAFD,MAEO,IAAIG,MAAMC,IAAN,KAAef,qBAAqBe,IAAxC,EAA8C;AACnDJ,eAASG,KAAT;AACD;AACF,GAND;AAOD;;AAED;;;;;;;;;AASA,SAASG,UAAT,CAAoBP,QAApB,EAA8BC,QAA9B,EAAwC;AACtC,MAAIO,cAAc,EAAlB;AACApB,QAAMc,QAAN,CAAeC,OAAf,CAAuBH,QAAvB,EAAiC,UAASS,aAAT,EAAyB;AACxD,QAAIC,WAAWD,aAAf;;AAEA;AACA;AACA;AACA,QAAIA,cAAcJ,IAAd,KAAuBhB,0BAA0BgB,IAArD,EAA2D;AACzD,UAAIM,qBAAqB,KAAzB;AACA,UAAIC,aAAa,EAAjB;;AAEAb,oBAAcU,cAAcH,KAAd,CAAoBN,QAAlC,EAA4C,UAASa,cAAT,EAA0B;AACpE,YAAIC,YAAYb,SAASY,cAAT,CAAhB;AACA,YAAIC,cAAcD,cAAlB,EAAkC;AAChCF,+BAAqB,IAArB;AACD;AACDC,mBAAWG,IAAX,CAAgBD,SAAhB;AACD,OAND;;AAQA;AACA;AACA,UAAIH,kBAAJ,EAAwB;AACtBD,mBAAWnB,eAAekB,aAAf,EAA8B,EAACT,UAAUY,UAAX,EAA9B,CAAX;AACD;AACF,KAjBD,MAiBO,IAAIH,cAAcJ,IAAd,KAAuBf,qBAAqBe,IAAhD,EAAsD;AAC3DK,iBAAWT,SAASQ,aAAT,CAAX;AACD;;AAEDD,gBAAYO,IAAZ,CAAiBL,QAAjB;AACD,GA5BD;;AA8BA,SAAOF,WAAP;AACD;;AAED,IAAIQ,uBAAuB;AACzBxB,YAASA,QADgB;AAEzBE,6BAA0BA,yBAFD;AAGzBC,kBAAeA,cAHU;AAIzBI,iBAAcA,aAJW;AAKzBQ,cAAWA;AALc,CAA3B;;AAQAU,OAAOC,OAAP,GAAiBF,oBAAjB","file":"FixedDataTableHelper.js","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTableHelper\n * @typechecks\n */\n\n\"use strict\";\n\nvar Locale = require('./Locale');\nvar React = require('./React');\nvar FixedDataTableColumnGroup = require('./FixedDataTableColumnGroup.react');\nvar FixedDataTableColumn = require('./FixedDataTableColumn.react');\n\nvar cloneWithProps = require('./cloneWithProps');\n\nvar DIR_SIGN = (Locale.isRTL() ? -1 : +1);\n// A cell up to 5px outside of the visible area will still be considered visible\nvar CELL_VISIBILITY_TOLERANCE = 5; // used for flyouts\n\nfunction renderToString(value) /*string*/ {\n  if (value === null || value === undefined) {\n    return '';\n  } else {\n    return String(value);\n  }\n}\n\n/**\n * Helper method to execute a callback against all columns given the children\n * of a table.\n * @param {?object|array} children\n *    Children of a table.\n * @param {function} callback\n *    Function to excecute for each column. It is passed the column.\n */\nfunction forEachColumn(children, callback) {\n  React.Children.forEach(children, function(child)  {\n    if (child.type === FixedDataTableColumnGroup.type) {\n      forEachColumn(child.props.children, callback);\n    } else if (child.type === FixedDataTableColumn.type) {\n      callback(child);\n    }\n  });\n}\n\n/**\n * Helper method to map columns to new columns. This takes into account column\n * groups and will generate a new column group if its columns change.\n * @param {?object|array} children\n *    Children of a table.\n * @param {function} callback\n *    Function to excecute for each column. It is passed the column and should\n *    return a result column.\n */\nfunction mapColumns(children, callback) {\n  var newChildren = [];\n  React.Children.forEach(children, function(originalChild)  {\n    var newChild = originalChild;\n\n    // The child is either a column group or a column. If it is a column group\n    // we need to iterate over its columns and then potentially generate a\n    // new column group\n    if (originalChild.type === FixedDataTableColumnGroup.type) {\n      var haveColumnsChanged = false;\n      var newColumns = [];\n\n      forEachColumn(originalChild.props.children, function(originalcolumn)  {\n        var newColumn = callback(originalcolumn);\n        if (newColumn !== originalcolumn) {\n          haveColumnsChanged = true;\n        }\n        newColumns.push(newColumn);\n      });\n\n      // If the column groups columns have changed clone the group and supply\n      // new children\n      if (haveColumnsChanged) {\n        newChild = cloneWithProps(originalChild, {children: newColumns});\n      }\n    } else if (originalChild.type === FixedDataTableColumn.type) {\n      newChild = callback(originalChild);\n    }\n\n    newChildren.push(newChild);\n  });\n\n  return newChildren;\n}\n\nvar FixedDataTableHelper = {\n  DIR_SIGN:DIR_SIGN,\n  CELL_VISIBILITY_TOLERANCE:CELL_VISIBILITY_TOLERANCE,\n  renderToString:renderToString,\n  forEachColumn:forEachColumn,\n  mapColumns:mapColumns,\n};\n\nmodule.exports = FixedDataTableHelper;\n"]}