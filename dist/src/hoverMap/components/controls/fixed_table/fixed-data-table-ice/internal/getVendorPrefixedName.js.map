{"version":3,"sources":["../../../../../../../../src/hoverMap/components/controls/fixed_table/fixed-data-table-ice/internal/getVendorPrefixedName.js"],"names":["ExecutionEnvironment","require","camelize","invariant","memoized","prefixes","prefixRegex","RegExp","join","testStyle","canUseDOM","document","createElement","style","getWithPrefix","name","i","length","prefixedName","getVendorPrefixedName","property","undefined","capitalizedName","charAt","toUpperCase","slice","test","module","exports"],"mappings":";;AAAA;;;;;;;;;;;;AAYA,IAAIA,uBAAuBC,QAAQ,wBAAR,CAA3B;;AAEA,IAAIC,WAAWD,QAAQ,YAAR,CAAf;AACA,IAAIE,YAAYF,QAAQ,aAAR,CAAhB;;AAEA,IAAIG,WAAW,EAAf;AACA,IAAIC,WAAW,CAAC,QAAD,EAAW,IAAX,EAAiB,KAAjB,EAAwB,GAAxB,CAAf;AACA,IAAIC,cAAc,IAAIC,MAAJ,CAAW,OAAOF,SAASG,IAAT,CAAc,GAAd,CAAP,GAA4B,GAAvC,CAAlB;AACA,IAAIC,YACFT,qBAAqBU,SAArB,GAAiCC,SAASC,aAAT,CAAuB,KAAvB,EAA8BC,KAA/D,GAAuE,EADzE;;AAGA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIX,SAASY,MAA7B,EAAqCD,GAArC,EAA0C;AACxC,QAAIE,eAAeb,SAASW,CAAT,IAAcD,IAAjC;AACA,QAAIG,gBAAgBT,SAApB,EAA+B;AAC7B,aAAOS,YAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;AAED;;;;;AAKA,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AACvC,MAAIL,OAAOb,SAASkB,QAAT,CAAX;AACA,MAAIhB,SAASW,IAAT,MAAmBM,SAAvB,EAAkC;AAChC,QAAIC,kBAAkBP,KAAKQ,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BT,KAAKU,KAAL,CAAW,CAAX,CAArD;AACA,QAAInB,YAAYoB,IAAZ,CAAiBJ,eAAjB,CAAJ,EAAuC;AACrCnB,gBACE,KADF,EAEE,8DACA,2CAHF,EAG+CiB,QAH/C;AAKD;AACDhB,aAASW,IAAT,IACGA,QAAQN,SAAT,GAAsBM,IAAtB,GAA6BD,cAAcQ,eAAd,CAD/B;AAED;AACD,SAAOlB,SAASW,IAAT,CAAP;AACD;;AAEDY,OAAOC,OAAP,GAAiBT,qBAAjB","file":"getVendorPrefixedName.js","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getVendorPrefixedName\n * @typechecks\n */\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar camelize = require('./camelize');\nvar invariant = require('./invariant');\n\nvar memoized = {};\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\nvar prefixRegex = new RegExp('^(' + prefixes.join('|') + ')');\nvar testStyle =\n  ExecutionEnvironment.canUseDOM ? document.createElement('div').style : {};\n\nfunction getWithPrefix(name) {\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixedName = prefixes[i] + name;\n    if (prefixedName in testStyle) {\n      return prefixedName;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {string} property Name of a css property to check for.\n * @return {?string} property name supported in the browser, or null if not\n * supported.\n */\nfunction getVendorPrefixedName(property) {\n  var name = camelize(property);\n  if (memoized[name] === undefined) {\n    var capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n    if (prefixRegex.test(capitalizedName)) {\n      invariant(\n        false,\n        'getVendorPrefixedName must only be called with unprefixed' +\n        'CSS property names. It was called with %s', property\n      );\n    }\n    memoized[name] =\n      (name in testStyle) ? name : getWithPrefix(capitalizedName);\n  }\n  return memoized[name];\n}\n\nmodule.exports = getVendorPrefixedName;\n"]}