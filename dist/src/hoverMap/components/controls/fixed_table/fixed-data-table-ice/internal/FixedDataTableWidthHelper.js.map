{"version":3,"sources":["../../../../../../../../src/hoverMap/components/controls/fixed_table/fixed-data-table-ice/internal/FixedDataTableWidthHelper.js"],"names":["React","require","cloneWithProps","getTotalWidth","columns","totalWidth","i","length","props","width","getTotalFlexGrow","totalFlexGrow","flexGrow","distributeFlexWidth","flexWidth","remainingFlexGrow","remainingFlexWidth","newColumns","column","push","columnFlexWidth","Math","floor","newColumnWidth","adjustColumnGroupWidths","columnGroups","expectedWidth","allColumns","Children","forEach","children","columnsWidth","max","newAllColumns","newColumnGroups","columnGroup","currentColumns","columnGroupFlexGrow","columnGroupFlexWidth","newColumnSettings","j","adjustColumnWidths","FixedDataTableWidthHelper","module","exports"],"mappings":"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","file":"FixedDataTableWidthHelper.js","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTableWidthHelper\n * @typechecks\n */\n'use strict';\n\nvar React = require('./React');\n\nvar cloneWithProps = require('./cloneWithProps');\n\nfunction getTotalWidth(/*array*/ columns) /*number*/ {\n  var totalWidth = 0;\n  for (var i = 0; i < columns.length; ++i) {\n    totalWidth += columns[i].props.width;\n  }\n  return totalWidth;\n}\n\nfunction getTotalFlexGrow(/*array*/ columns) /*number*/ {\n  var totalFlexGrow = 0;\n  for (var i = 0; i < columns.length; ++i) {\n    totalFlexGrow += columns[i].props.flexGrow || 0;\n  }\n  return totalFlexGrow;\n}\n\nfunction distributeFlexWidth(\n  /*array*/ columns,\n  /*number*/ flexWidth\n) /*object*/ {\n  if (flexWidth <= 0) {\n    return {\n      columns: columns,\n      width: getTotalWidth(columns),\n    };\n  }\n  var remainingFlexGrow = getTotalFlexGrow(columns);\n  var remainingFlexWidth = flexWidth;\n  var newColumns = [];\n  var totalWidth = 0;\n  for (var i = 0; i < columns.length; ++i) {\n    var column = columns[i];\n    if (!column.props.flexGrow) {\n      totalWidth += column.props.width;\n      newColumns.push(column);\n      continue;\n    }\n    var columnFlexWidth = Math.floor(\n      column.props.flexGrow / remainingFlexGrow * remainingFlexWidth\n    );\n    var newColumnWidth = Math.floor(column.props.width + columnFlexWidth);\n    totalWidth += newColumnWidth;\n\n    remainingFlexGrow -= column.props.flexGrow;\n    remainingFlexWidth -= columnFlexWidth;\n\n    newColumns.push(cloneWithProps(\n      column,\n      {width: newColumnWidth}\n    ));\n  }\n\n  return {\n    columns: newColumns,\n    width: totalWidth,\n  };\n}\n\nfunction adjustColumnGroupWidths(\n  /*array*/ columnGroups,\n  /*number*/ expectedWidth\n) /*object*/ {\n  var allColumns = [];\n  var i;\n  for (i = 0; i < columnGroups.length; ++i) {\n    React.Children.forEach(\n      columnGroups[i].props.children,\n      function(column)  {allColumns.push(column);}\n    );\n  }\n  var columnsWidth = getTotalWidth(allColumns);\n  var remainingFlexGrow = getTotalFlexGrow(allColumns);\n  var remainingFlexWidth = Math.max(expectedWidth - columnsWidth, 0);\n\n  var newAllColumns = [];\n  var newColumnGroups = [];\n\n  for (i = 0; i < columnGroups.length; ++i) {\n    var columnGroup = columnGroups[i];\n    var currentColumns = [];\n\n    React.Children.forEach(\n      columnGroup.props.children,\n      function(column)  {currentColumns.push(column);}\n    );\n\n    var columnGroupFlexGrow = getTotalFlexGrow(currentColumns);\n    var columnGroupFlexWidth = Math.floor(\n      columnGroupFlexGrow / remainingFlexGrow * remainingFlexWidth\n    );\n\n    var newColumnSettings = distributeFlexWidth(\n      currentColumns,\n      columnGroupFlexWidth\n    );\n\n    remainingFlexGrow -= columnGroupFlexGrow;\n    remainingFlexWidth -= columnGroupFlexWidth;\n\n    for (var j = 0; j < newColumnSettings.columns.length; ++j) {\n      newAllColumns.push(newColumnSettings.columns[j]);\n    }\n\n    newColumnGroups.push(cloneWithProps(\n      columnGroup,\n      {width: newColumnSettings.width}\n    ));\n  }\n\n  return {\n    columns: newAllColumns,\n    columnGroups: newColumnGroups,\n  };\n}\n\nfunction adjustColumnWidths(\n  /*array*/ columns,\n  /*number*/ expectedWidth\n) /*array*/ {\n  var columnsWidth = getTotalWidth(columns);\n  if (columnsWidth < expectedWidth) {\n    return distributeFlexWidth(columns, expectedWidth - columnsWidth).columns;\n  }\n  return columns;\n}\n\nvar FixedDataTableWidthHelper = {\n  getTotalWidth:getTotalWidth,\n  getTotalFlexGrow:getTotalFlexGrow,\n  distributeFlexWidth:distributeFlexWidth,\n  adjustColumnWidths:adjustColumnWidths,\n  adjustColumnGroupWidths:adjustColumnGroupWidths,\n};\n\nmodule.exports = FixedDataTableWidthHelper;\n"]}