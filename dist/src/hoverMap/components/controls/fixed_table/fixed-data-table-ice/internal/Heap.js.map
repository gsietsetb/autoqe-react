{"version":3,"sources":["../../../../../../../../src/hoverMap/components/controls/fixed_table/fixed-data-table-ice/internal/Heap.js"],"names":["defaultComparator","a","b","Heap","items","comparator","_items","_size","length","_comparator","_heapify","prototype","empty","pop","elt","lastElt","_sinkDown","push","item","_bubbleUp","size","peek","index","Math","floor","parentIndex","parentElt","leftChildIndex","rightChildIndex","swapIndex","leftChild","rightChild","module","exports"],"mappings":"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","file":"Heap.js","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Heap\n * @typechecks\n * @preventMunge\n */\n\n\"use strict\";\n\n/*\n * @param {*} a\n * @param {*} b\n * @return {boolean}\n */\nfunction defaultComparator(a, b) {\n  return a < b;\n}\n\n\n  function Heap(items, comparator) {\n    this._items = items || [];\n    this._size = this._items.length;\n    this._comparator = comparator || defaultComparator;\n    this._heapify();\n  }\n\n  /*\n   * @return {boolean}\n   */\n  Heap.prototype.empty=function() {\n    return this._size === 0;\n  };\n\n  /*\n   * @return {*}\n   */\n  Heap.prototype.pop=function() {\n    if (this._size === 0){\n      return;\n    }\n\n    var elt = this._items[0];\n\n    var lastElt = this._items.pop();\n    this._size--;\n\n    if (this._size > 0) {\n      this._items[0] = lastElt;\n      this._sinkDown(0);\n    }\n\n    return elt;\n  };\n\n  /*\n   * @param {*} item\n   */\n  Heap.prototype.push=function(item) {\n    this._items[this._size++] = item;\n    this._bubbleUp(this._size - 1);\n  };\n\n  /*\n   * @return {number}\n   */\n  Heap.prototype.size=function() {\n    return this._size;\n  };\n\n  /*\n   * @return {*}\n   */\n  Heap.prototype.peek=function() {\n    if (this._size === 0) {\n      return;\n    }\n\n    return this._items[0];\n  };\n\n  Heap.prototype._heapify=function() {\n    for (var index = Math.floor((this._size + 1)/ 2); index >= 0; index--) {\n      this._sinkDown(index);\n    }\n  };\n\n  /*\n   * @parent {number} index\n   */\n  Heap.prototype._bubbleUp=function(index) {\n    var elt = this._items[index];\n    while (index > 0) {\n      var parentIndex = Math.floor((index + 1) / 2) - 1;\n      var parentElt = this._items[parentIndex];\n\n      // if parentElt < elt, stop\n      if (this._comparator(parentElt, elt)) {\n        return;\n      }\n\n      // swap\n      this._items[parentIndex] = elt;\n      this._items[index] = parentElt;\n      index = parentIndex;\n    }\n  };\n\n  /*\n   * @parent {number} index\n   */\n  Heap.prototype._sinkDown=function(index) {\n    var elt = this._items[index];\n\n    while (true) {\n      var leftChildIndex = 2 * (index + 1) - 1;\n      var rightChildIndex = 2 * (index + 1);\n      var swapIndex = -1;\n\n      if (leftChildIndex < this._size) {\n        var leftChild = this._items[leftChildIndex];\n        if (this._comparator(leftChild, elt)) {\n          swapIndex = leftChildIndex;\n        }\n      }\n\n      if (rightChildIndex < this._size) {\n        var rightChild = this._items[rightChildIndex];\n        if (this._comparator(rightChild, elt)) {\n          if (swapIndex === -1 ||\n              this._comparator(rightChild, this._items[swapIndex])) {\n            swapIndex = rightChildIndex;\n          }\n        }\n      }\n\n      // if we don't have a swap, stop\n      if (swapIndex === -1) {\n        return;\n      }\n\n      this._items[index] = this._items[swapIndex];\n      this._items[swapIndex] = elt;\n      index = swapIndex;\n    }\n  };\n\n\nmodule.exports = Heap;\n"]}