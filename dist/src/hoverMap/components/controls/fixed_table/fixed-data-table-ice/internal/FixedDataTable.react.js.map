{"version":3,"sources":["../../../../../../../../src/hoverMap/components/controls/fixed_table/fixed-data-table-ice/internal/FixedDataTable.react.js"],"names":["FixedDataTableHelper","require","Locale","React","ReactComponentWithPureRenderMixin","ReactWheelHandler","Scrollbar","FixedDataTableBufferedRows","FixedDataTableColumnResizeHandle","FixedDataTableRow","FixedDataTableScrollHelper","FixedDataTableWidthHelper","cloneWithProps","cx","debounceCore","emptyFunction","invariant","shallowEqual","translateDOMPositionXY","PropTypes","ReactChildren","Children","renderToString","EMPTY_OBJECT","COLUMN_SETTING_NAMES","FixedDataTable","createClass","displayName","propTypes","width","number","isRequired","height","maxHeight","ownerHeight","overflowX","oneOf","overflowY","rowsCount","rowHeight","rowHeightGetter","func","rowGetter","rowClassNameGetter","groupHeaderHeight","headerHeight","headerDataGetter","footerHeight","footerData","oneOfType","object","array","scrollLeft","scrollToColumn","scrollTop","scrollToRow","onScrollEnd","onScroll","onContentHeightChange","onRowClick","onRowMouseDown","onRowMouseEnter","onColumnResizeEndCallback","isColumnResizing","bool","getDefaultProps","getInitialState","props","viewportHeight","_scrollHelper","scrollTo","_didScrollStop","_calculateState","componentWillMount","undefined","_rowToScrollTo","_columnToScrollTo","_wheelHandler","_onWheel","onReactWheelHandlerChange","_reportContentHeight","scrollContentHeight","state","reservedHeight","requiredHeight","contentHeight","Math","max","maxScrollY","bodyHeight","_contentHeight","componentDidMount","componentWillReceiveProps","nextProps","newOverflowX","newOverflowY","setState","componentDidUpdate","render","groupHeader","useGroupHeader","createElement","key","className","data","groupHeaderData","index","zIndex","offsetTop","scrollX","fixedColumns","groupHeaderFixedColumns","scrollableColumns","groupHeaderScrollableColumns","showScrollbarX","maxScrollX","showScrollbarY","scrollbarXHeight","SIZE","scrollbarYHeight","headerOffsetTop","bodyOffsetTop","bottomSectionOffset","footOffsetTop","rowsContainerHeight","min","verticalScrollbar","size","contentSize","_onVerticalScroll","position","scrollY","horizontalScrollbar","scrollbarYWidth","scrollbarXWidth","HorizontalScrollbar","offset","_onHorizontalScroll","dragKnob","initialWidth","columnResizingData","minWidth","maxWidth","Number","MAX_VALUE","visible","leftOffset","left","knobHeight","initialEvent","onColumnResizeEnd","columnKey","footer","footFixedColumns","footScrollableColumns","rows","_renderRows","header","headData","headFixedColumns","headScrollableColumns","onColumnResize","_onColumnResize","shadow","style","top","onWheel","defaultRowHeight","firstRowIndex","firstRowOffset","bodyFixedColumns","bodyScrollableColumns","showLastRowBorder","combinedWidth","cellWidth","cellMinWidth","cellMaxWidth","event","isRTL","clientX","clientY","preventDefault","_populateColumnsAndColumnData","columns","columnGroups","columnInfo","bodyColumnTypes","_splitColumnTypes","fixed","scrollable","_getHeadData","headColumnTypes","_createHeadColumns","footColumnTypes","_createFootColumns","_getGroupHeaderData","_createGroupHeaderColumns","groupHeaderColumnTypes","oldState","scrollState","scrollRowIntoView","setRowHeightGetter","children","forEach","child","type","__TableColumnGroup__","__TableColumn__","push","length","columnGroupSettings","adjustColumnGroupWidths","adjustColumnWidths","_tryReusingColumnSettings","fixedColumnsCount","totalFixedColumnsWidth","i","column","scrollableColumnIndex","previousColumnsWidth","availableScrollWidth","selectedColumnWidth","minAcceptableScrollPosition","useMaxHeight","totalHeightReserved","getContentHeight","totalHeightNeeded","scrollContentWidth","getTotalWidth","horizontalScrollbarVisible","setViewportHeight","newState","Object","assign","settingName","canReuse","newColumnGroups","dataKey","columnData","columnGroupData","isHeaderCell","headColumns","columnProps","cellRenderer","headerRenderer","label","footColumns","footerRenderer","isFooterCell","deltaX","deltaY","isMounted","x","abs","scrollBy","round","scrollPos","mixins","outerContainerStyle","innerContainerStyle","__spread","isOpaque","orientation","module","exports"],"mappings":"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","file":"FixedDataTable.react.js","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTable.react\n * @typechecks\n */\n\n/* jslint bitwise: true */\n\nvar FixedDataTableHelper = require('./FixedDataTableHelper');\nvar Locale = require('./Locale');\nvar React = require('./React');\nvar ReactComponentWithPureRenderMixin = require('./ReactComponentWithPureRenderMixin');\nvar ReactWheelHandler = require('./ReactWheelHandler');\nvar Scrollbar = require('./Scrollbar.react');\nvar FixedDataTableBufferedRows = require('./FixedDataTableBufferedRows.react');\nvar FixedDataTableColumnResizeHandle = require('./FixedDataTableColumnResizeHandle.react');\nvar FixedDataTableRow = require('./FixedDataTableRow.react');\nvar FixedDataTableScrollHelper = require('./FixedDataTableScrollHelper');\nvar FixedDataTableWidthHelper = require('./FixedDataTableWidthHelper');\n\nvar cloneWithProps = require('./cloneWithProps');\nvar cx = require('./cx');\nvar debounceCore = require('./debounceCore');\nvar emptyFunction = require('./emptyFunction');\nvar invariant = require('./invariant');\nvar shallowEqual = require('./shallowEqual');\nvar translateDOMPositionXY = require('./translateDOMPositionXY');\n\nvar PropTypes = React.PropTypes;\nvar ReactChildren = React.Children;\n\nvar renderToString = FixedDataTableHelper.renderToString;\nvar EMPTY_OBJECT = {};\nvar COLUMN_SETTING_NAMES = [\n  'bodyFixedColumns',\n  'bodyScrollableColumns',\n  'headFixedColumns',\n  'headScrollableColumns',\n  'footFixedColumns',\n  'footScrollableColumns',\n];\n\n/**\n * Data grid component with fixed or scrollable header and columns.\n *\n * The layout of the data table is as follow:\n *\n * ```\n * +---------------------------------------------------+\n * | Fixed Column Group    | Scrollable Column Group   |\n * | Header                | Header                    |\n * |                       |                           |\n * +---------------------------------------------------+\n * |                       |                           |\n * | Fixed Header Columns  | Scrollable Header Columns |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * |                       |                           |\n * | Fixed Body Columns    | Scrollable Body Columns   |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * |                       |                           |\n * | Fixed Footer Columns  | Scrollable Footer Columns |\n * |                       |                           |\n * +-----------------------+---------------------------+\n * ```\n *\n * - Fixed Column Group Header: These are the headers for a group\n *   of columns if included in the table that do not scroll\n *   vertically or horizontally.\n *\n * - Scrollable Column Group Header:  The header for a group of columns\n *   that do not move while scrolling vertically, but move horizontally\n *   with the horizontal scrolling.\n *\n * - Fixed Header Columns: The header columns that do not move while scrolling\n *   vertically or horizontally.\n *\n * - Scrollable Header Columns: The header columns that do not move\n *   while scrolling vertically, but move horizontally with the horizontal\n *   scrolling.\n *\n * - Fixed Body Columns: The body columns that do not move while scrolling\n *   horizontally, but move vertically with the vertical scrolling.\n *\n * - Scrollable Body Columns: The body columns that move while scrolling\n *   vertically or horizontally.\n */\nvar FixedDataTable = React.createClass({displayName: \"FixedDataTable\",\n\n  propTypes: {\n\n    /**\n     * Pixel width of table. If all rows do not fit,\n     * a horizontal scrollbar will appear.\n     */\n    width: PropTypes.number.isRequired,\n\n    /**\n     * Pixel height of table. If all rows do not fit,\n     * a vertical scrollbar will appear.\n     *\n     * Either `height` or `maxHeight` must be specified.\n     */\n    height: PropTypes.number,\n\n    /**\n     * Maximum pixel height of table. If all rows do not fit,\n     * a vertical scrollbar will appear.\n     *\n     * Either `height` or `maxHeight` must be specified.\n     */\n    maxHeight: PropTypes.number,\n\n    /**\n     * Pixel height of table's owner, This is used to make sure the footer\n     * and scrollbar of the table are visible when current space for table in\n     * view is smaller than final height of table. It allows to avoid resizing\n     * and reflowing table whan it is moving in the view.\n     *\n     * This is used if `ownerHeight < height`.\n     */\n    ownerHeight: PropTypes.number,\n\n    overflowX: PropTypes.oneOf(['hidden', 'auto']),\n    overflowY: PropTypes.oneOf(['hidden', 'auto']),\n\n    /**\n     * Number of rows in the table.\n     */\n    rowsCount: PropTypes.number.isRequired,\n\n    /**\n     * Pixel height of rows unless rowHeightGetter is specified and returns\n     * different value.\n     */\n    rowHeight: PropTypes.number.isRequired,\n\n    /**\n     * If specified, `rowHeightGetter(index)` is called for each row and the\n     * returned value overrides rowHeight for particular row.\n     */\n    rowHeightGetter: PropTypes.func,\n\n    /**\n     * To get rows to display in table, `rowGetter(index)`\n     * is called. rowGetter should be smart enough to handle async\n     * fetching of data and returning temporary objects\n     * while data is being fetched.\n     */\n    rowGetter: PropTypes.func.isRequired,\n\n    /**\n     * To get any additional css classes that should be added to a row,\n     * `rowClassNameGetter(index)` is called.\n     */\n    rowClassNameGetter: PropTypes.func,\n\n    /**\n     * Pixel height of the column group header.\n     */\n    groupHeaderHeight: PropTypes.number,\n\n    /**\n     * Pixel height of header.\n     */\n    headerHeight: PropTypes.number.isRequired,\n\n    /**\n     * Function that is called to get the data for the header row.\n     */\n    headerDataGetter: PropTypes.func,\n\n    /**\n     * Pixel height of footer.\n     */\n    footerHeight: PropTypes.number,\n\n    /**\n     * Data that will be passed to footer cell renderers.\n     */\n    footerData: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.array,\n    ]),\n\n    /**\n     * Value of horizontal scroll.\n     */\n    scrollLeft: PropTypes.number,\n\n    /**\n     * Index of column to scroll to.\n     */\n    scrollToColumn: PropTypes.number,\n\n    /**\n     * Value of vertical scroll.\n     */\n    scrollTop: PropTypes.number,\n\n    /**\n     * Index of row to scroll to.\n     */\n    scrollToRow: PropTypes.number,\n\n    /**\n     * Callback that is called when scrolling ends or stops with new horizontal\n     * and vertical scroll values.\n     */\n    onScrollEnd: PropTypes.func,\n\n    /**\n     * Callback that is called when scrolling with new horizontal\n     * and vertical scroll values.\n     */\n    onScroll: PropTypes.func,\n\n    /**\n     * Callback that is called when `rowHeightGetter` returns a different height\n     * for a row than the `rowHeight` prop. This is necessary because initially\n     * table estimates heights of some parts of the content.\n     */\n    onContentHeightChange: PropTypes.func,\n\n    /**\n     * Callback that is called when a row is clicked.\n     */\n    onRowClick: PropTypes.func,\n\n    /**\n     * Callback that is called when mouse down event happens above a row.\n     */\n    onRowMouseDown: PropTypes.func,\n\n    /**\n     * Callback that is called when the mouse enters a row.\n     */\n    onRowMouseEnter: PropTypes.func,\n\n    /**\n     * Callback that is called when resizer has been released\n     * and column needs to be updated.\n     */\n    onColumnResizeEndCallback: PropTypes.func,\n\n    /**\n     * Whether a column is currently being resized.\n     */\n    isColumnResizing: PropTypes.bool,\n  },\n\n  getDefaultProps:function() /*object*/ {\n    return {\n      footerHeight: 0,\n      groupHeaderHeight: 0,\n      headerHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n    };\n  },\n\n  getInitialState:function() /*object*/ {\n    var props = this.props;\n    var viewportHeight = props.height -\n      props.headerHeight -\n      props.footerHeight -\n      props.groupHeaderHeight;\n    this._scrollHelper = new FixedDataTableScrollHelper(\n      props.rowsCount,\n      props.rowHeight,\n      viewportHeight,\n      props.rowHeightGetter\n    );\n    if (props.scrollTop) {\n      this._scrollHelper.scrollTo(props.scrollTop);\n    }\n    this._didScrollStop = debounceCore(this._didScrollStop, 160, this);\n\n    return this._calculateState(this.props);\n  },\n\n  componentWillMount:function() {\n    var scrollToRow = this.props.scrollToRow;\n    if (scrollToRow !== undefined && scrollToRow !== null) {\n      this._rowToScrollTo = scrollToRow;\n    }\n    var scrollToColumn = this.props.scrollToColumn;\n    if (scrollToColumn !== undefined && scrollToColumn !== null) {\n      this._columnToScrollTo = scrollToColumn;\n    }\n    this._wheelHandler = new ReactWheelHandler(\n      this._onWheel,\n      this.props.overflowX !== 'hidden', // Should handle horizontal scroll\n      this.props.overflowY !== 'hidden' // Should handle vertical scroll\n    );\n    if(this.props.onReactWheelHandlerChange) {\n      this.props.onReactWheelHandlerChange(this._wheelHandler);\n    }\n  },\n\n  _reportContentHeight:function() {\n    var scrollContentHeight = this.state.scrollContentHeight;\n    var reservedHeight = this.state.reservedHeight;\n    var requiredHeight = scrollContentHeight + reservedHeight;\n    var contentHeight;\n    if (this.state.height > requiredHeight && this.props.ownerHeight) {\n      contentHeight = Math.max(requiredHeight, this.props.ownerHeight);\n    } else {\n      var maxScrollY = scrollContentHeight - this.state.bodyHeight;\n      contentHeight = this.props.height + maxScrollY;\n    }\n    if (contentHeight !== this._contentHeight &&\n        this.props.onContentHeightChange) {\n      this.props.onContentHeightChange(contentHeight);\n    }\n    this._contentHeight = contentHeight;\n  },\n\n  componentDidMount:function() {\n    this._reportContentHeight();\n  },\n\n  componentWillReceiveProps:function(/*object*/ nextProps) {\n    var scrollToRow = nextProps.scrollToRow;\n    if (scrollToRow !== undefined && scrollToRow !== null) {\n      this._rowToScrollTo = scrollToRow;\n    }\n    var scrollToColumn = nextProps.scrollToColumn;\n    if (scrollToColumn !== undefined && scrollToColumn !== null) {\n      this._columnToScrollTo = scrollToColumn;\n    }\n\n    var newOverflowX = nextProps.overflowX;\n    var newOverflowY = nextProps.overflowY;\n    if (newOverflowX !== this.props.overflowX ||\n        newOverflowY !== this.props.overflowY) {\n      this._wheelHandler = new ReactWheelHandler(\n        this._onWheel,\n        newOverflowX !== 'hidden', // Should handle horizontal scroll\n        newOverflowY !== 'hidden' // Should handle vertical scroll\n      );\n\n      if(this.props.onReactWheelHandlerChange) {\n        this.props.onReactWheelHandlerChange(this._wheelHandler);\n      }\n    }\n\n    this.setState(this._calculateState(nextProps, this.state));\n  },\n\n  componentDidUpdate:function() {\n    this._reportContentHeight();\n  },\n\n  render:function() /*object*/ {\n    var state = this.state;\n    var props = this.props;\n\n    var groupHeader;\n    if (state.useGroupHeader) {\n      groupHeader = (\n        React.createElement(FixedDataTableRow, {\n          key: \"group_header\",\n          className: cx('public/fixedDataTable/header'),\n          data: state.groupHeaderData,\n          width: state.width,\n          height: state.groupHeaderHeight,\n          index: 0,\n          zIndex: 1,\n          offsetTop: 0,\n          scrollLeft: state.scrollX,\n          fixedColumns: state.groupHeaderFixedColumns,\n          scrollableColumns: state.groupHeaderScrollableColumns}\n        )\n      );\n    }\n\n    var maxScrollY = this.state.scrollContentHeight - this.state.bodyHeight;\n    var showScrollbarX = state.maxScrollX > 0 && state.overflowX !== 'hidden';\n    var showScrollbarY = maxScrollY > 0 && state.overflowY !== 'hidden';\n    var scrollbarXHeight = showScrollbarX ? Scrollbar.SIZE : 0;\n    var scrollbarYHeight = state.height - scrollbarXHeight;\n\n    var headerOffsetTop = state.useGroupHeader ? state.groupHeaderHeight : 0;\n    var bodyOffsetTop = headerOffsetTop + state.headerHeight;\n    var bottomSectionOffset = 0;\n    var footOffsetTop = bodyOffsetTop + state.bodyHeight;\n    var rowsContainerHeight = footOffsetTop + state.footerHeight;\n\n    if (props.ownerHeight !== undefined  && props.ownerHeight < props.height) {\n      bottomSectionOffset = props.ownerHeight - props.height;\n      footOffsetTop = Math.min(\n        footOffsetTop,\n        scrollbarYHeight + bottomSectionOffset - state.footerHeight\n      );\n      scrollbarYHeight = props.ownerHeight - scrollbarXHeight;\n    }\n\n    var verticalScrollbar;\n    if (showScrollbarY) {\n      verticalScrollbar =\n        React.createElement(Scrollbar, {\n          size: scrollbarYHeight,\n          contentSize: scrollbarYHeight + maxScrollY,\n          onScroll: this._onVerticalScroll,\n          position: state.scrollY}\n        );\n    }\n\n    var horizontalScrollbar;\n    if (showScrollbarX) {\n      var scrollbarYWidth = showScrollbarY ? Scrollbar.SIZE : 0;\n      var scrollbarXWidth = state.width - scrollbarYWidth;\n      horizontalScrollbar =\n        React.createElement(HorizontalScrollbar, {\n          contentSize: scrollbarXWidth + state.maxScrollX,\n          offset: bottomSectionOffset,\n          onScroll: this._onHorizontalScroll,\n          position: state.scrollX,\n          size: scrollbarXWidth}\n        );\n    }\n\n    var dragKnob =\n      React.createElement(FixedDataTableColumnResizeHandle, {\n        height: state.height,\n        initialWidth: state.columnResizingData.width || 0,\n        minWidth: state.columnResizingData.minWidth || 0,\n        maxWidth: state.columnResizingData.maxWidth || Number.MAX_VALUE,\n        visible: !!state.isColumnResizing,\n        leftOffset: state.columnResizingData.left || 0,\n        knobHeight: state.headerHeight,\n        initialEvent: state.columnResizingData.initialEvent,\n        onColumnResizeEnd: props.onColumnResizeEndCallback,\n        columnKey: state.columnResizingData.key}\n      );\n\n    var footer = null;\n    if (state.footerHeight) {\n      footer =\n        React.createElement(FixedDataTableRow, {\n          key: \"footer\",\n          className: cx('public/fixedDataTable/footer'),\n          data: state.footerData,\n          fixedColumns: state.footFixedColumns,\n          height: state.footerHeight,\n          index: -1,\n          zIndex: 1,\n          offsetTop: footOffsetTop,\n          scrollableColumns: state.footScrollableColumns,\n          scrollLeft: state.scrollX,\n          width: state.width}\n        );\n    }\n\n    var rows = this._renderRows(bodyOffsetTop);\n\n    var header =\n      React.createElement(FixedDataTableRow, {\n        key: \"header\",\n        className: cx('public/fixedDataTable/header'),\n        data: state.headData,\n        width: state.width,\n        height: state.headerHeight,\n        index: -1,\n        zIndex: 1,\n        offsetTop: headerOffsetTop,\n        scrollLeft: state.scrollX,\n        fixedColumns: state.headFixedColumns,\n        scrollableColumns: state.headScrollableColumns,\n        onColumnResize: this._onColumnResize}\n      );\n\n    var shadow;\n    if (state.scrollY) {\n      shadow =\n        React.createElement(\"div\", {\n          className: cx('fixedDataTable/shadow'),\n          style: {top: bodyOffsetTop}}\n        );\n    }\n\n    return (\n      React.createElement(\"div\", {\n        className: cx('public/fixedDataTable/main'),\n        onWheel: this._wheelHandler.onWheel,\n        style: {height: state.height, width: state.width}},\n        React.createElement(\"div\", {\n          className: cx('fixedDataTable/rowsContainer'),\n          style: {height: rowsContainerHeight, width: state.width}},\n          dragKnob,\n          groupHeader,\n          header,\n          rows,\n          footer,\n          shadow\n        ),\n        verticalScrollbar,\n        horizontalScrollbar\n      )\n    );\n  },\n\n  _renderRows:function(/*number*/ offsetTop) /*object*/ {\n    var state = this.state;\n\n    return (\n      React.createElement(FixedDataTableBufferedRows, {\n        defaultRowHeight: state.rowHeight,\n        firstRowIndex: state.firstRowIndex,\n        firstRowOffset: state.firstRowOffset,\n        fixedColumns: state.bodyFixedColumns,\n        height: state.bodyHeight,\n        offsetTop: offsetTop,\n        onRowClick: state.onRowClick,\n        onRowMouseDown: state.onRowMouseDown,\n        onRowMouseEnter: state.onRowMouseEnter,\n        rowClassNameGetter: state.rowClassNameGetter,\n        rowsCount: state.rowsCount,\n        rowGetter: state.rowGetter,\n        rowHeightGetter: state.rowHeightGetter,\n        scrollLeft: state.scrollX,\n        scrollableColumns: state.bodyScrollableColumns,\n        showLastRowBorder: !state.footerHeight,\n        width: state.width}\n      )\n    );\n  },\n\n  /**\n   * This is called when a cell that is in the header of a column has its\n   * resizer knob clicked on. It displays the resizer and puts in the correct\n   * location on the table.\n   */\n  _onColumnResize:function(\n    /*number*/ combinedWidth,\n    /*number*/ leftOffset,\n    /*number*/ cellWidth,\n    /*?number*/ cellMinWidth,\n    /*?number*/ cellMaxWidth,\n    /*number|string*/ columnKey,\n    /*object*/ event) {\n    if (Locale.isRTL()) {\n      leftOffset = -leftOffset;\n    }\n    this.setState({\n      isColumnResizing: true,\n      columnResizingData: {\n        left: leftOffset + combinedWidth - cellWidth,\n        width: cellWidth,\n        minWidth: cellMinWidth,\n        maxWidth: cellMaxWidth,\n        initialEvent: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n          preventDefault: emptyFunction\n        },\n        key: columnKey\n      }\n    });\n  },\n\n  _populateColumnsAndColumnData:function(\n    /*array*/ columns,\n    /*?array*/ columnGroups\n  ) /*object*/ {\n    var columnInfo = {};\n    var bodyColumnTypes = this._splitColumnTypes(columns);\n    columnInfo.bodyFixedColumns = bodyColumnTypes.fixed;\n    columnInfo.bodyScrollableColumns = bodyColumnTypes.scrollable;\n\n    columnInfo.headData = this._getHeadData(columns);\n    var headColumnTypes = this._splitColumnTypes(\n      this._createHeadColumns(columns)\n    );\n    columnInfo.headFixedColumns = headColumnTypes.fixed;\n    columnInfo.headScrollableColumns = headColumnTypes.scrollable;\n\n    var footColumnTypes = this._splitColumnTypes(\n      this._createFootColumns(columns)\n    );\n    columnInfo.footFixedColumns = footColumnTypes.fixed;\n    columnInfo.footScrollableColumns = footColumnTypes.scrollable;\n\n    if (columnGroups) {\n      columnInfo.groupHeaderData = this._getGroupHeaderData(columnGroups);\n      columnGroups = this._createGroupHeaderColumns(columnGroups);\n      var groupHeaderColumnTypes = this._splitColumnTypes(columnGroups);\n      columnInfo.groupHeaderFixedColumns = groupHeaderColumnTypes.fixed;\n      columnInfo.groupHeaderScrollableColumns =\n        groupHeaderColumnTypes.scrollable;\n    }\n    return columnInfo;\n  },\n\n  _calculateState:function(/*object*/ props, /*?object*/ oldState) /*object*/ {\n    invariant(\n      props.height !== undefined || props.maxHeight !== undefined,\n      'You must set either a height or a maxHeight'\n    );\n\n    var firstRowIndex = (oldState && oldState.firstRowIndex) || 0;\n    var firstRowOffset = (oldState && oldState.firstRowOffset) || 0;\n    var scrollX, scrollY;\n    if (oldState && props.overflowX !== 'hidden') {\n      scrollX = oldState.scrollX;\n    } else {\n      scrollX = props.scrollLeft;\n    }\n    if (oldState && props.overflowY !== 'hidden') {\n      scrollY = oldState.scrollY;\n    } else {\n      scrollState = this._scrollHelper.scrollTo(props.scrollTop);\n      firstRowIndex = scrollState.index;\n      firstRowOffset = scrollState.offset;\n      scrollY = scrollState.position;\n\n      if (this.props.onScroll) {\n        this.props.onScroll(scrollX, scrollState.position, scrollState);\n      }\n    }\n\n    if (this._rowToScrollTo !== undefined) {\n      scrollState =\n        this._scrollHelper.scrollRowIntoView(this._rowToScrollTo);\n      firstRowIndex = scrollState.index;\n      firstRowOffset = scrollState.offset;\n      scrollY = scrollState.position;\n      delete this._rowToScrollTo;\n\n      if (this.props.onScroll) {\n        this.props.onScroll(scrollX, scrollState.position, scrollState);\n      }\n    }\n\n    if (oldState && props.rowsCount !== oldState.rowsCount) {\n      // Number of rows changed, try to scroll to the row from before the\n      // change\n      var viewportHeight = props.height -\n        props.headerHeight -\n        props.footerHeight -\n        props.groupHeaderHeight;\n      this._scrollHelper = new FixedDataTableScrollHelper(\n        props.rowsCount,\n        props.rowHeight,\n        viewportHeight,\n        props.rowHeightGetter\n      );\n      var scrollState =\n        this._scrollHelper.scrollToRow(firstRowIndex, firstRowOffset);\n      firstRowIndex = scrollState.index;\n      firstRowOffset = scrollState.offset;\n      scrollY = scrollState.position;\n\n      if (this.props.onScroll) {\n        this.props.onScroll(scrollX, scrollState.position, scrollState);\n      }\n\n    } else if (oldState && props.rowHeightGetter !== oldState.rowHeightGetter) {\n      this._scrollHelper.setRowHeightGetter(props.rowHeightGetter);\n    }\n\n    var columnResizingData;\n    if (props.isColumnResizing) {\n      columnResizingData = oldState && oldState.columnResizingData;\n    } else {\n      columnResizingData = EMPTY_OBJECT;\n    }\n\n    var children = [];\n\n    ReactChildren.forEach(props.children, function(child, index)  {\n      if (child == null) {\n        return;\n      }\n      invariant(\n        child.type.__TableColumnGroup__ ||\n        child.type.__TableColumn__,\n        'child type should be <FixedDataTableColumn /> or ' +\n        '<FixedDataTableColumnGroup />'\n      );\n      children.push(child);\n    });\n\n    var useGroupHeader = false;\n    if (children.length && children[0].type.__TableColumnGroup__) {\n      useGroupHeader = true;\n    }\n\n    var columns;\n    var columnGroups;\n\n    if (useGroupHeader) {\n      var columnGroupSettings =\n        FixedDataTableWidthHelper.adjustColumnGroupWidths(\n          children,\n          props.width\n      );\n      columns = columnGroupSettings.columns;\n      columnGroups = columnGroupSettings.columnGroups;\n    } else {\n      columns = FixedDataTableWidthHelper.adjustColumnWidths(\n        children,\n        props.width\n      );\n    }\n\n    var columnInfo = this._populateColumnsAndColumnData(\n      columns,\n      columnGroups\n    );\n\n    if (oldState) {\n      columnInfo = this._tryReusingColumnSettings(columnInfo, oldState);\n    }\n\n    if (this._columnToScrollTo !== undefined) {\n      // If selected column is a fixed column, don't scroll\n      var fixedColumnsCount = columnInfo.bodyFixedColumns.length;\n      if (this._columnToScrollTo >= fixedColumnsCount) {\n        var totalFixedColumnsWidth = 0;\n        var i, column;\n        for (i = 0; i < columnInfo.bodyFixedColumns.length; ++i) {\n          column = columnInfo.bodyFixedColumns[i];\n          totalFixedColumnsWidth += column.props.width;\n        }\n\n        var scrollableColumnIndex = this._columnToScrollTo - fixedColumnsCount;\n        var previousColumnsWidth = 0;\n        for (i = 0; i < scrollableColumnIndex; ++i) {\n          column = columnInfo.bodyScrollableColumns[i];\n          previousColumnsWidth += column.props.width;\n        }\n\n        var availableScrollWidth = props.width - totalFixedColumnsWidth;\n        var selectedColumnWidth = columnInfo.bodyScrollableColumns[\n          this._columnToScrollTo - fixedColumnsCount\n        ].props.width;\n        var minAcceptableScrollPosition =\n          previousColumnsWidth + selectedColumnWidth - availableScrollWidth;\n\n        if (scrollX < minAcceptableScrollPosition) {\n          scrollX = minAcceptableScrollPosition;\n        }\n\n        if (scrollX > previousColumnsWidth) {\n          scrollX = previousColumnsWidth;\n        }\n      }\n      delete this._columnToScrollTo;\n    }\n\n    var useMaxHeight = props.height === undefined;\n    var height = useMaxHeight ? props.maxHeight : props.height;\n    var totalHeightReserved = props.footerHeight + props.headerHeight +\n      props.groupHeaderHeight;\n    var bodyHeight = height - totalHeightReserved;\n    var scrollContentHeight = this._scrollHelper.getContentHeight();\n    var totalHeightNeeded = scrollContentHeight + totalHeightReserved;\n    var scrollContentWidth =\n      FixedDataTableWidthHelper.getTotalWidth(columns);\n\n    var horizontalScrollbarVisible = scrollContentWidth > props.width &&\n      props.overflowX !== 'hidden';\n\n    if (horizontalScrollbarVisible) {\n      bodyHeight -= Scrollbar.SIZE;\n      totalHeightNeeded += Scrollbar.SIZE;\n      totalHeightReserved += Scrollbar.SIZE;\n    }\n\n    var maxScrollX = Math.max(0, scrollContentWidth - props.width);\n    var maxScrollY = Math.max(0, scrollContentHeight - bodyHeight);\n    scrollX = Math.min(scrollX, maxScrollX);\n    scrollY = Math.min(scrollY, maxScrollY);\n\n    if (!maxScrollY) {\n      // no vertical scrollbar necessary, use the totals we tracked so we\n      // can shrink-to-fit vertically\n      if (useMaxHeight) {\n        height = totalHeightNeeded;\n      }\n      bodyHeight = totalHeightNeeded - totalHeightReserved;\n    }\n\n    this._scrollHelper.setViewportHeight(bodyHeight);\n\n    // The order of elements in this object metters and bringing bodyHeight,\n    // height or useGroupHeader to the top can break various features\n    var newState = Object.assign({\n      isColumnResizing: oldState && oldState.isColumnResizing},\n      // isColumnResizing should be overwritten by value from props if\n      // avaialble\n\n      columnInfo,\n      props,\n\n      {columnResizingData:columnResizingData,\n      firstRowIndex:firstRowIndex,\n      firstRowOffset:firstRowOffset,\n      horizontalScrollbarVisible:horizontalScrollbarVisible,\n      maxScrollX:maxScrollX,\n      reservedHeight: totalHeightReserved,\n      scrollContentHeight:scrollContentHeight,\n      scrollX:scrollX,\n      scrollY:scrollY,\n\n      // These properties may overwrite properties defined in\n      // columnInfo and props\n      bodyHeight:bodyHeight,\n      height:height,\n      useGroupHeader:useGroupHeader\n    });\n\n    // Both `headData` and `groupHeaderData` are generated by\n    // `FixedDataTable` will be passed to each header cell to render.\n    // In order to prevent over-rendering the cells, we do not pass the\n    // new `headData` or `groupHeaderData`\n    // if they haven't changed.\n    if (oldState) {\n      if (shallowEqual(oldState.headData, newState.headData)) {\n        newState.headData = oldState.headData;\n      }\n      if (shallowEqual(oldState.groupHeaderData, newState.groupHeaderData)) {\n        newState.groupHeaderData = oldState.groupHeaderData;\n      }\n    }\n\n    return newState;\n  },\n\n  _tryReusingColumnSettings:function(\n    /*object*/ columnInfo,\n    /*object*/ oldState\n  ) /*object*/ {\n    COLUMN_SETTING_NAMES.forEach(function(settingName)  {\n      if (columnInfo[settingName].length === oldState[settingName].length) {\n        var canReuse = true;\n        for (var index = 0; index < columnInfo[settingName].length; ++index) {\n          if (!shallowEqual(\n              columnInfo[settingName][index].props,\n              oldState[settingName][index].props\n          )) {\n            canReuse = false;\n            break;\n          }\n        }\n        if (canReuse) {\n          columnInfo[settingName] = oldState[settingName];\n        }\n      }\n    });\n    return columnInfo;\n  },\n\n  _createGroupHeaderColumns:function(/*array*/ columnGroups) /*array*/  {\n    var newColumnGroups = [];\n    for (var i = 0; i < columnGroups.length; ++i) {\n      newColumnGroups[i] = cloneWithProps(\n        columnGroups[i],\n        {\n          dataKey: i,\n          children: undefined,\n          columnData: columnGroups[i].props.columnGroupData,\n          isHeaderCell: true,\n        }\n      );\n    }\n    return newColumnGroups;\n  },\n\n  _createHeadColumns:function(/*array*/ columns) /*array*/ {\n    var headColumns = [];\n    for (var i = 0; i < columns.length; ++i) {\n      var columnProps = columns[i].props;\n      headColumns.push(cloneWithProps(\n        columns[i],\n        {\n          cellRenderer: columnProps.headerRenderer || renderToString,\n          columnData: columnProps.columnData,\n          dataKey: columnProps.dataKey,\n          isHeaderCell: true,\n          label: columnProps.label,\n        }\n      ));\n    }\n    return headColumns;\n  },\n\n  _createFootColumns:function(/*array*/ columns) /*array*/ {\n    var footColumns = [];\n    for (var i = 0; i < columns.length; ++i) {\n      var columnProps = columns[i].props;\n      footColumns.push(cloneWithProps(\n        columns[i],\n        {\n          cellRenderer: columnProps.footerRenderer || renderToString,\n          columnData: columnProps.columnData,\n          dataKey: columnProps.dataKey,\n          isFooterCell: true,\n        }\n      ));\n    }\n    return footColumns;\n  },\n\n  _getHeadData:function(/*array*/ columns) /*object*/ {\n    var headData = {};\n    for (var i = 0; i < columns.length; ++i) {\n      var columnProps = columns[i].props;\n      if (this.props.headerDataGetter) {\n        headData[columnProps.dataKey] =\n          this.props.headerDataGetter(columnProps.dataKey);\n      } else {\n        headData[columnProps.dataKey] = columnProps.label || '';\n      }\n    }\n    return headData;\n  },\n\n  _getGroupHeaderData:function(/*array*/ columnGroups) /*array*/ {\n    var groupHeaderData = [];\n    for (var i = 0; i < columnGroups.length; ++i) {\n      groupHeaderData[i] = columnGroups[i].props.label || '';\n    }\n    return groupHeaderData;\n  },\n\n  _splitColumnTypes:function(/*array*/ columns) /*object*/ {\n    var fixedColumns = [];\n    var scrollableColumns = [];\n    for (var i = 0; i < columns.length; ++i) {\n      if (columns[i].props.fixed) {\n        fixedColumns.push(columns[i]);\n      } else {\n        scrollableColumns.push(columns[i]);\n      }\n    }\n    return {\n      fixed: fixedColumns,\n      scrollable: scrollableColumns,\n    };\n  },\n\n  _onWheel:function(/*number*/ deltaX, /*number*/ deltaY) {\n    if (this.isMounted()) {\n      var x = this.state.scrollX;\n      if (Math.abs(deltaY) > Math.abs(deltaX) &&\n          this.props.overflowY !== 'hidden') {\n        var scrollState = this._scrollHelper.scrollBy(Math.round(deltaY));\n        // console.log('scrollState.index', scrollState.index, ' o=',scrollState.offset, ' h=',scrollState);\n        this.setState({\n          firstRowIndex: scrollState.index,\n          firstRowOffset: scrollState.offset,\n          scrollY: scrollState.position,\n          scrollContentHeight: scrollState.contentHeight,\n        });\n\n        if (this.props.onScroll) {\n          this.props.onScroll(this.state.scrollX, scrollState.position, scrollState);\n        }\n\n      } else if (deltaX && this.props.overflowX !== 'hidden') {\n        x += deltaX;\n        x = x < 0 ? 0 : x;\n        x = x > this.state.maxScrollX ? this.state.maxScrollX : x;\n        this.setState({\n          scrollX: x,\n        });\n\n        if (this.props.onScroll) {\n          this.props.onScroll(x, this.state.scrollY);\n        }\n      }\n\n      this._didScrollStop();\n    }\n  },\n\n\n  _onHorizontalScroll:function(/*number*/ scrollPos) {\n    if (this.isMounted() && scrollPos !== this.state.scrollX) {\n      this.setState({\n        scrollX: scrollPos,\n      });\n      if (this.props.onScroll) {\n        this.props.onScroll(scrollPos, this.state.scrollY);\n      }\n      this._didScrollStop();\n    }\n  },\n\n  _onVerticalScroll:function(/*number*/ scrollPos) {\n    if (this.isMounted() && scrollPos !== this.state.scrollY) {\n      var scrollState = this._scrollHelper.scrollTo(Math.round(scrollPos));\n      this.setState({\n        firstRowIndex: scrollState.index,\n        firstRowOffset: scrollState.offset,\n        scrollY: scrollState.position,\n        scrollContentHeight: scrollState.contentHeight,\n      });\n\n      if (this.props.onScroll) {\n        this.props.onScroll(this.state.scrollX, scrollState.position, scrollState);\n      }\n\n      this._didScrollStop();\n    }\n  },\n\n  _didScrollStop:function() {\n    if (this.isMounted()) {\n      if (this.props.onScrollEnd) {\n        this.props.onScrollEnd(this.state.scrollX, this.state.scrollY);\n      }\n    }\n  }\n});\n\nvar HorizontalScrollbar = React.createClass({displayName: \"HorizontalScrollbar\",\n  mixins: [ReactComponentWithPureRenderMixin],\n  propTypes: {\n    contentSize: PropTypes.number.isRequired,\n    offset: PropTypes.number.isRequired,\n    onScroll: PropTypes.func.isRequired,\n    position: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n  },\n\n  render:function() /*object*/ {\n    var outerContainerStyle = {\n      height: Scrollbar.SIZE,\n      width: this.props.size,\n    };\n    var innerContainerStyle = {\n      height: Scrollbar.SIZE,\n      position: 'absolute',\n      width: this.props.size,\n    };\n    translateDOMPositionXY(\n      innerContainerStyle,\n      0,\n      this.props.offset\n    );\n\n    return (\n      React.createElement(\"div\", {\n        className: cx('fixedDataTable/horizontalScrollbar'),\n        style: outerContainerStyle},\n        React.createElement(\"div\", {style: innerContainerStyle},\n          React.createElement(Scrollbar, React.__spread({},\n            this.props,\n            {isOpaque: true,\n            orientation: \"horizontal\",\n            offset: undefined})\n          )\n        )\n      )\n    );\n  },\n});\n\nmodule.exports = FixedDataTable;\n"]}