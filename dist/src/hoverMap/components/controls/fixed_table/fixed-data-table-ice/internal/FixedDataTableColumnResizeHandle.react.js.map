{"version":3,"sources":["../../../../../../../../src/hoverMap/components/controls/fixed_table/fixed-data-table-ice/internal/FixedDataTableColumnResizeHandle.react.js"],"names":["DOMMouseMoveTracker","require","Locale","React","ReactComponentWithPureRenderMixin","clamp","cx","PropTypes","FixedDataTableColumnResizeHandle","createClass","displayName","mixins","propTypes","visible","bool","isRequired","height","number","leftOffset","knobHeight","initialWidth","minWidth","maxWidth","initialEvent","object","onColumnResizeEnd","func","columnKey","oneOfType","string","getInitialState","width","cursorDelta","componentWillReceiveProps","newProps","_mouseMoveTracker","isDragging","captureMouseMoves","setState","componentDidMount","_onMove","_onColumnResizeEnd","document","body","componentWillUnmount","releaseMouseMoves","render","style","state","props","isRTL","right","left","createElement","className","deltaX","newWidth","newColumnWidth","module","exports"],"mappings":"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","file":"FixedDataTableColumnResizeHandle.react.js","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * This is to be used with the FixedDataTable. It is a read line\n * that when you click on a column that is resizable appears and allows\n * you to resize the corresponding column.\n *\n * @providesModule FixedDataTableColumnResizeHandle.react\n * @typechecks\n */\n\nvar DOMMouseMoveTracker = require('./DOMMouseMoveTracker');\nvar Locale = require('./Locale');\nvar React = require('./React');\nvar ReactComponentWithPureRenderMixin = require('./ReactComponentWithPureRenderMixin');\n\nvar clamp = require('./clamp');\nvar cx = require('./cx');\n\nvar PropTypes = React.PropTypes;\n\nvar FixedDataTableColumnResizeHandle = React.createClass({displayName: \"FixedDataTableColumnResizeHandle\",\n  mixins: [ReactComponentWithPureRenderMixin],\n\n  propTypes: {\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * This is the height of the line\n     */\n    height: PropTypes.number.isRequired,\n\n    /**\n     * Offset from left border of the table, please note\n     * that the line is a border on diff. So this is really the\n     * offset of the column itself.\n     */\n    leftOffset: PropTypes.number.isRequired,\n\n    /**\n     * Height of the clickable region of the line.\n     * This is assumed to be at the top of the line.\n     */\n    knobHeight: PropTypes.number.isRequired,\n\n    /**\n     * The line is a border on a diff, so this is essentially\n     * the width of column.\n     */\n    initialWidth: PropTypes.number,\n\n    /**\n     * The minimum width this dragger will collapse to\n     */\n    minWidth: PropTypes.number,\n\n    /**\n     * The maximum width this dragger will collapse to\n     */\n    maxWidth: PropTypes.number,\n\n    /**\n     * Initial click event on the header cell.\n     */\n    initialEvent: PropTypes.object,\n\n    /**\n     * When resizing is complete this is called.\n     */\n    onColumnResizeEnd: PropTypes.func,\n\n    /**\n     * Column key for the column being resized.\n     */\n    columnKey: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n  },\n\n  getInitialState:function() /*object*/ {\n    return {\n      width: 0,\n      cursorDelta: 0\n    };\n  },\n\n  componentWillReceiveProps:function(/*object*/ newProps) {\n    if (newProps.initialEvent && !this._mouseMoveTracker.isDragging()) {\n      this._mouseMoveTracker.captureMouseMoves(newProps.initialEvent);\n      this.setState({\n        width: newProps.initialWidth,\n        cursorDelta: newProps.initialWidth\n      });\n    }\n  },\n\n  componentDidMount:function() {\n    this._mouseMoveTracker = new DOMMouseMoveTracker(\n      this._onMove,\n      this._onColumnResizeEnd,\n      document.body\n    );\n  },\n\n  componentWillUnmount:function() {\n    this._mouseMoveTracker.releaseMouseMoves();\n    this._mouseMoveTracker = null;\n  },\n\n  render:function() /*object*/ {\n    var style = {\n      width: this.state.width,\n      height: this.props.height,\n    };\n    if (Locale.isRTL()) {\n      style.right = this.props.leftOffset;\n    } else {\n      style.left = this.props.leftOffset;\n    }\n    return (\n      React.createElement(\"div\", {\n        className: cx({\n          'fixedDataTableColumnResizerLine/main': true,\n          'fixedDataTableColumnResizerLine/hiddenElem': !this.props.visible\n        }), \n        style: style}, \n        React.createElement(\"div\", {\n          className: cx('fixedDataTableColumnResizerLine/mouseArea'), \n          style: {height: this.props.height}}\n        )\n      )\n    );\n  },\n\n  _onMove:function(/*number*/ deltaX) {\n    if (Locale.isRTL()) {\n      deltaX = -deltaX;\n    }\n    var newWidth = this.state.cursorDelta + deltaX;\n    var newColumnWidth =\n      clamp(this.props.minWidth, newWidth, this.props.maxWidth);\n\n    // Please note cursor delta is the different between the currently width\n    // and the new width.\n    this.setState({\n      width: newColumnWidth,\n      cursorDelta: newWidth\n    });\n  },\n\n  _onColumnResizeEnd:function() {\n    this._mouseMoveTracker.releaseMouseMoves();\n    this.props.onColumnResizeEnd(\n      this.state.width,\n      this.props.columnKey\n    );\n  },\n});\n\nmodule.exports = FixedDataTableColumnResizeHandle;\n"]}