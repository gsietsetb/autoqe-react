{"version":3,"sources":["../../../../../../../../src/hoverMap/components/controls/fixed_table/fixed-data-table-ice/internal/FixedDataTableScrollHelper.js"],"names":["PrefixIntervalTree","require","clamp","BUFFER_ROWS","FixedDataTableScrollHelper","rowCount","defaultRowHeight","viewportHeight","rowHeightGetter","$FixedDataTableScrollHelper_rowOffsets","$FixedDataTableScrollHelper_storedHeights","Array","i","$FixedDataTableScrollHelper_rowCount","$FixedDataTableScrollHelper_position","$FixedDataTableScrollHelper_contentHeight","$FixedDataTableScrollHelper_defaultRowHeight","$FixedDataTableScrollHelper_rowHeightGetter","$FixedDataTableScrollHelper_viewportHeight","scrollRowIntoView","bind","setViewportHeight","scrollBy","scrollTo","scrollToRow","setRowHeightGetter","getContentHeight","$FixedDataTableScrollHelper_updateHeightsInViewport","prototype","firstRowIndex","firstRowOffset","top","index","$FixedDataTableScrollHelper_updateRowHeight","$FixedDataTableScrollHelper_updateHeightsAboveViewport","delta","rowIndex","newHeight","change","set","firstRow","upperBound","firstRowPosition","value","position","rowHeightChange","visibleRowHeight","invisibleRowHeight","maxPosition","firstVisibleRow","offset","contentHeight","$FixedDataTableScrollHelper_getRowAtEndPosition","currentRowIndex","get","Math","max","rowEnd","rowBegin","module","exports"],"mappings":"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","file":"FixedDataTableScrollHelper.js","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTableScrollHelper\n * @typechecks\n */\n'use strict';\n\nvar PrefixIntervalTree = require('./PrefixIntervalTree');\nvar clamp = require('./clamp');\n\nvar BUFFER_ROWS = 5;\n\n\n  function FixedDataTableScrollHelper(\nrowCount,\n    /*number*/ defaultRowHeight,\n    /*number*/ viewportHeight,\n    /*?function*/ rowHeightGetter)\n   {\n    this.$FixedDataTableScrollHelper_rowOffsets = new PrefixIntervalTree(rowCount, defaultRowHeight);\n    this.$FixedDataTableScrollHelper_storedHeights = new Array(rowCount);\n    for (var i = 0; i < rowCount; ++i) {\n      this.$FixedDataTableScrollHelper_storedHeights[i] = defaultRowHeight;\n    }\n    this.$FixedDataTableScrollHelper_rowCount = rowCount;\n    this.$FixedDataTableScrollHelper_position = 0;\n    this.$FixedDataTableScrollHelper_contentHeight = rowCount * defaultRowHeight;\n    this.$FixedDataTableScrollHelper_defaultRowHeight = defaultRowHeight;\n    this.$FixedDataTableScrollHelper_rowHeightGetter = rowHeightGetter ?\n      rowHeightGetter :\n      function()  {return defaultRowHeight;};\n    this.$FixedDataTableScrollHelper_viewportHeight = viewportHeight;\n    this.scrollRowIntoView = this.scrollRowIntoView.bind(this);\n    this.setViewportHeight = this.setViewportHeight.bind(this);\n    this.scrollBy = this.scrollBy.bind(this);\n    this.scrollTo = this.scrollTo.bind(this);\n    this.scrollToRow = this.scrollToRow.bind(this);\n    this.setRowHeightGetter = this.setRowHeightGetter.bind(this);\n    this.getContentHeight = this.getContentHeight.bind(this);\n\n    this.$FixedDataTableScrollHelper_updateHeightsInViewport(0, 0);\n  }\n\n  FixedDataTableScrollHelper.prototype.setRowHeightGetter=function(rowHeightGetter) {\n    this.$FixedDataTableScrollHelper_rowHeightGetter = rowHeightGetter;\n  };\n\n  FixedDataTableScrollHelper.prototype.setViewportHeight=function(viewportHeight) {\n    this.$FixedDataTableScrollHelper_viewportHeight = viewportHeight;\n  };\n\n  FixedDataTableScrollHelper.prototype.getContentHeight=function()  {\n    return this.$FixedDataTableScrollHelper_contentHeight;\n  };\n\n  FixedDataTableScrollHelper.prototype.$FixedDataTableScrollHelper_updateHeightsInViewport=function(\nfirstRowIndex,\n    /*number*/ firstRowOffset)\n   {\n    var top = firstRowOffset;\n    var index = firstRowIndex;\n    while (top <= this.$FixedDataTableScrollHelper_viewportHeight && index < this.$FixedDataTableScrollHelper_rowCount) {\n      this.$FixedDataTableScrollHelper_updateRowHeight(index);\n      top += this.$FixedDataTableScrollHelper_storedHeights[index];\n      index++;\n    }\n  };\n\n  FixedDataTableScrollHelper.prototype.$FixedDataTableScrollHelper_updateHeightsAboveViewport=function(firstRowIndex) {\n    var index = firstRowIndex - 1;\n    while (index >= 0 && index >= firstRowIndex - BUFFER_ROWS) {\n      var delta = this.$FixedDataTableScrollHelper_updateRowHeight(index);\n      this.$FixedDataTableScrollHelper_position += delta;\n      index--;\n    }\n  };\n\n  FixedDataTableScrollHelper.prototype.$FixedDataTableScrollHelper_updateRowHeight=function(rowIndex)  {\n    if (rowIndex < 0 || rowIndex >= this.$FixedDataTableScrollHelper_rowCount) {\n      return 0;\n    }\n    var newHeight = this.$FixedDataTableScrollHelper_rowHeightGetter(rowIndex);\n    if (newHeight !== this.$FixedDataTableScrollHelper_storedHeights[rowIndex]) {\n      var change = newHeight - this.$FixedDataTableScrollHelper_storedHeights[rowIndex];\n      this.$FixedDataTableScrollHelper_rowOffsets.set(rowIndex, newHeight);\n      this.$FixedDataTableScrollHelper_storedHeights[rowIndex] = newHeight;\n      this.$FixedDataTableScrollHelper_contentHeight += change;\n      return change;\n    }\n    return 0;\n  };\n\n  FixedDataTableScrollHelper.prototype.scrollBy=function(delta)  {\n    var firstRow = this.$FixedDataTableScrollHelper_rowOffsets.upperBound(this.$FixedDataTableScrollHelper_position);\n    var firstRowPosition =\n      firstRow.value - this.$FixedDataTableScrollHelper_storedHeights[firstRow.index];\n    var rowIndex = firstRow.index;\n    var position = this.$FixedDataTableScrollHelper_position;\n\n    var rowHeightChange = this.$FixedDataTableScrollHelper_updateRowHeight(rowIndex);\n    if (firstRowPosition !== 0) {\n      position += rowHeightChange;\n    }\n    var visibleRowHeight = this.$FixedDataTableScrollHelper_storedHeights[rowIndex] -\n      (position - firstRowPosition);\n\n    if (delta >= 0) {\n\n      while (delta > 0 && rowIndex < this.$FixedDataTableScrollHelper_rowCount) {\n        if (delta < visibleRowHeight) {\n          position += delta;\n          delta = 0;\n        } else {\n          delta -= visibleRowHeight;\n          position += visibleRowHeight;\n          rowIndex++;\n        }\n        if (rowIndex < this.$FixedDataTableScrollHelper_rowCount) {\n          this.$FixedDataTableScrollHelper_updateRowHeight(rowIndex);\n          visibleRowHeight = this.$FixedDataTableScrollHelper_storedHeights[rowIndex];\n        }\n      }\n    } else if (delta < 0) {\n      delta = -delta;\n      var invisibleRowHeight = this.$FixedDataTableScrollHelper_storedHeights[rowIndex] - visibleRowHeight;\n\n      while (delta > 0 && rowIndex >= 0) {\n        if (delta < invisibleRowHeight) {\n          position -= delta;\n          delta = 0;\n        } else {\n          position -= invisibleRowHeight;\n          delta -= invisibleRowHeight;\n          rowIndex--;\n        }\n        if (rowIndex >= 0) {\n          var change = this.$FixedDataTableScrollHelper_updateRowHeight(rowIndex);\n          invisibleRowHeight = this.$FixedDataTableScrollHelper_storedHeights[rowIndex];\n          position += change;\n        }\n      }\n    }\n\n    var maxPosition = this.$FixedDataTableScrollHelper_contentHeight - this.$FixedDataTableScrollHelper_viewportHeight;\n    position = clamp(0, position, maxPosition);\n    this.$FixedDataTableScrollHelper_position = position;\n    var firstVisibleRow = this.$FixedDataTableScrollHelper_rowOffsets.upperBound(position);\n    var firstRowIndex = firstVisibleRow.index;\n    firstRowPosition =\n      firstVisibleRow.value - this.$FixedDataTableScrollHelper_rowHeightGetter(firstRowIndex);\n    var firstRowOffset = firstRowPosition - position;\n\n    this.$FixedDataTableScrollHelper_updateHeightsInViewport(firstRowIndex, firstRowOffset);\n    this.$FixedDataTableScrollHelper_updateHeightsAboveViewport(firstRowIndex);\n\n    return {\n      index: firstRowIndex,\n      offset: firstRowOffset,\n      position: this.$FixedDataTableScrollHelper_position,\n      contentHeight: this.$FixedDataTableScrollHelper_contentHeight,\n    };\n  };\n\n  FixedDataTableScrollHelper.prototype.$FixedDataTableScrollHelper_getRowAtEndPosition=function(rowIndex)  {\n    // We need to update enough rows above the selected one to be sure that when\n    // we scroll to selected position all rows between first shown and selected\n    // one have most recent heights computed and will not resize\n    this.$FixedDataTableScrollHelper_updateRowHeight(rowIndex);\n    var currentRowIndex = rowIndex;\n    var top = this.$FixedDataTableScrollHelper_storedHeights[currentRowIndex];\n    while (top < this.$FixedDataTableScrollHelper_viewportHeight && currentRowIndex >= 0) {\n      currentRowIndex--;\n      if (currentRowIndex >= 0) {\n        this.$FixedDataTableScrollHelper_updateRowHeight(currentRowIndex);\n        top += this.$FixedDataTableScrollHelper_storedHeights[currentRowIndex];\n      }\n    }\n    var position = this.$FixedDataTableScrollHelper_rowOffsets.get(rowIndex).value - this.$FixedDataTableScrollHelper_viewportHeight;\n    if (position < 0) {\n      position = 0;\n    }\n    return position;\n  };\n\n  FixedDataTableScrollHelper.prototype.scrollTo=function(position)  {\n    if (position <= 0) {\n      // If position less than or equal to 0 first row should be fully visible\n      // on top\n      this.$FixedDataTableScrollHelper_position = 0;\n      this.$FixedDataTableScrollHelper_updateHeightsInViewport(0, 0);\n\n      return {\n        index: 0,\n        offset: 0,\n        position: this.$FixedDataTableScrollHelper_position,\n        contentHeight: this.$FixedDataTableScrollHelper_contentHeight,\n      };\n    } else if (position >= this.$FixedDataTableScrollHelper_contentHeight - this.$FixedDataTableScrollHelper_viewportHeight) {\n      // If position is equal to or greater than max scroll value, we need\n      // to make sure to have bottom border of last row visible.\n      var rowIndex = this.$FixedDataTableScrollHelper_rowCount - 1;\n      position = this.$FixedDataTableScrollHelper_getRowAtEndPosition(rowIndex);\n    }\n    this.$FixedDataTableScrollHelper_position = position;\n\n    var firstVisibleRow = this.$FixedDataTableScrollHelper_rowOffsets.upperBound(position);\n    var firstRowIndex = Math.max(firstVisibleRow.index, 0);\n    var firstRowPosition =\n      firstVisibleRow.value - this.$FixedDataTableScrollHelper_rowHeightGetter(firstRowIndex);\n    var firstRowOffset = firstRowPosition - position;\n\n    this.$FixedDataTableScrollHelper_updateHeightsInViewport(firstRowIndex, firstRowOffset);\n    this.$FixedDataTableScrollHelper_updateHeightsAboveViewport(firstRowIndex);\n\n    return {\n      index: firstRowIndex,\n      offset: firstRowOffset,\n      position: this.$FixedDataTableScrollHelper_position,\n      contentHeight: this.$FixedDataTableScrollHelper_contentHeight,\n    };\n  };\n\n  /**\n   * Allows to scroll to selected row with specified offset. It always\n   * brings that row to top of viewport with that offset\n   */\n  FixedDataTableScrollHelper.prototype.scrollToRow=function(rowIndex, /*number*/ offset)  {\n    rowIndex = clamp(0, rowIndex, this.$FixedDataTableScrollHelper_rowCount - 1);\n    offset = clamp(-this.$FixedDataTableScrollHelper_storedHeights[rowIndex], offset, 0);\n    var firstRow = this.$FixedDataTableScrollHelper_rowOffsets.get(rowIndex);\n    return this.scrollTo(\n      firstRow.value - this.$FixedDataTableScrollHelper_storedHeights[rowIndex] - offset\n    );\n  };\n\n  /**\n   * Allows to scroll to selected row by bringing it to viewport with minimal\n   * scrolling. This that if row is fully visible, scroll will not be changed.\n   * If top border of row is above top of viewport it will be scrolled to be\n   * fully visible on the top of viewport. If the bottom border of row is\n   * below end of viewport, it will be scrolled up to be fully visible on the\n   * bottom of viewport.\n   */\n  FixedDataTableScrollHelper.prototype.scrollRowIntoView=function(rowIndex)  {\n    rowIndex = clamp(0, rowIndex, this.$FixedDataTableScrollHelper_rowCount - 1);\n    var rowEnd = this.$FixedDataTableScrollHelper_rowOffsets.get(rowIndex).value;\n    var rowBegin = rowEnd - this.$FixedDataTableScrollHelper_storedHeights[rowIndex];\n    if (rowBegin < this.$FixedDataTableScrollHelper_position) {\n      return this.scrollTo(rowBegin);\n    } else if (rowEnd > this.$FixedDataTableScrollHelper_position + this.$FixedDataTableScrollHelper_viewportHeight) {\n      var position = this.$FixedDataTableScrollHelper_getRowAtEndPosition(rowIndex);\n      return this.scrollTo(position);\n    }\n    return this.scrollTo(this.$FixedDataTableScrollHelper_position);\n  };\n\n\nmodule.exports = FixedDataTableScrollHelper;\n"]}