{"version":3,"sources":["../../../../../../../../src/hoverMap/components/controls/fixed_table/fixed-data-table-ice/internal/UserAgent_DEPRECATED.js"],"names":["_populated","_ie","_firefox","_opera","_webkit","_chrome","_ie_real_version","_osx","_windows","_linux","_android","_win64","_iphone","_ipad","_native","_mobile","_populate","uas","navigator","userAgent","agent","exec","os","parseFloat","NaN","document","documentMode","trident","ver","replace","UserAgent_DEPRECATED","ie","ieCompatibilityMode","ie64","firefox","opera","webkit","safari","chrome","windows","osx","linux","iphone","mobile","nativeApp","android","ipad","module","exports"],"mappings":"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","file":"UserAgent_DEPRECATED.js","sourcesContent":["/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule UserAgent_DEPRECATED\n */\n\n/**\n *  Provides entirely client-side User Agent and OS detection. You should prefer\n *  the non-deprecated UserAgent module when possible, which exposes our\n *  authoritative server-side PHP-based detection to the client.\n *\n *  Usage is straightforward:\n *\n *    if (UserAgent_DEPRECATED.ie()) {\n *      //  IE\n *    }\n *\n *  You can also do version checks:\n *\n *    if (UserAgent_DEPRECATED.ie() >= 7) {\n *      //  IE7 or better\n *    }\n *\n *  The browser functions will return NaN if the browser does not match, so\n *  you can also do version compares the other way:\n *\n *    if (UserAgent_DEPRECATED.ie() < 7) {\n *      //  IE6 or worse\n *    }\n *\n *  Note that the version is a float and may include a minor version number,\n *  so you should always use range operators to perform comparisons, not\n *  strict equality.\n *\n *  **Note:** You should **strongly** prefer capability detection to browser\n *  version detection where it's reasonable:\n *\n *    http://www.quirksmode.org/js/support.html\n *\n *  Further, we have a large number of mature wrapper functions and classes\n *  which abstract away many browser irregularities. Check the documentation,\n *  grep for things, or ask on javascript@lists.facebook.com before writing yet\n *  another copy of \"event || window.event\".\n *\n */\n\nvar _populated = false;\n\n// Browsers\nvar _ie, _firefox, _opera, _webkit, _chrome;\n\n// Actual IE browser for compatibility mode\nvar _ie_real_version;\n\n// Platforms\nvar _osx, _windows, _linux, _android;\n\n// Architectures\nvar _win64;\n\n// Devices\nvar _iphone, _ipad, _native;\n\nvar _mobile;\n\nfunction _populate() {\n  if (_populated) {\n    return;\n  }\n\n  _populated = true;\n\n  // To work around buggy JS libraries that can't handle multi-digit\n  // version numbers, Opera 10's user agent string claims it's Opera\n  // 9, then later includes a Version/X.Y field:\n  //\n  // Opera/9.80 (foo) Presto/2.2.15 Version/10.10\n  var uas = navigator.userAgent;\n  var agent = /(?:MSIE.(\\d+\\.\\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\\d+\\.\\d+))|(?:Opera(?:.+Version.|.)(\\d+\\.\\d+))|(?:AppleWebKit.(\\d+(?:\\.\\d+)?))|(?:Trident\\/\\d+\\.\\d+.*rv:(\\d+\\.\\d+))/.exec(uas);\n  var os    = /(Mac OS X)|(Windows)|(Linux)/.exec(uas);\n\n  _iphone = /\\b(iPhone|iP[ao]d)/.exec(uas);\n  _ipad = /\\b(iP[ao]d)/.exec(uas);\n  _android = /Android/i.exec(uas);\n  _native = /FBAN\\/\\w+;/i.exec(uas);\n  _mobile = /Mobile/i.exec(uas);\n\n  // Note that the IE team blog would have you believe you should be checking\n  // for 'Win64; x64'.  But MSDN then reveals that you can actually be coming\n  // from either x64 or ia64;  so ultimately, you should just check for Win64\n  // as in indicator of whether you're in 64-bit IE.  32-bit IE on 64-bit\n  // Windows will send 'WOW64' instead.\n  _win64 = !!(/Win64/.exec(uas));\n\n  if (agent) {\n    _ie = agent[1] ? parseFloat(agent[1]) : (\n          agent[5] ? parseFloat(agent[5]) : NaN);\n    // IE compatibility mode\n    if (_ie && document && document.documentMode) {\n      _ie = document.documentMode;\n    }\n    // grab the \"true\" ie version from the trident token if available\n    var trident = /(?:Trident\\/(\\d+.\\d+))/.exec(uas);\n    _ie_real_version = trident ? parseFloat(trident[1]) + 4 : _ie;\n\n    _firefox = agent[2] ? parseFloat(agent[2]) : NaN;\n    _opera   = agent[3] ? parseFloat(agent[3]) : NaN;\n    _webkit  = agent[4] ? parseFloat(agent[4]) : NaN;\n    if (_webkit) {\n      // We do not add the regexp to the above test, because it will always\n      // match 'safari' only since 'AppleWebKit' appears before 'Chrome' in\n      // the userAgent string.\n      agent = /(?:Chrome\\/(\\d+\\.\\d+))/.exec(uas);\n      _chrome = agent && agent[1] ? parseFloat(agent[1]) : NaN;\n    } else {\n      _chrome = NaN;\n    }\n  } else {\n    _ie = _firefox = _opera = _chrome = _webkit = NaN;\n  }\n\n  if (os) {\n    if (os[1]) {\n      // Detect OS X version.  If no version number matches, set _osx to true.\n      // Version examples:  10, 10_6_1, 10.7\n      // Parses version number as a float, taking only first two sets of\n      // digits.  If only one set of digits is found, returns just the major\n      // version number.\n      var ver = /(?:Mac OS X (\\d+(?:[._]\\d+)?))/.exec(uas);\n\n      _osx = ver ? parseFloat(ver[1].replace('_', '.')) : true;\n    } else {\n      _osx = false;\n    }\n    _windows = !!os[2];\n    _linux   = !!os[3];\n  } else {\n    _osx = _windows = _linux = false;\n  }\n}\n\nvar UserAgent_DEPRECATED = {\n\n  /**\n   *  Check if the UA is Internet Explorer.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  ie: function() {\n    return _populate() || _ie;\n  },\n\n  /**\n   * Check if we're in Internet Explorer compatibility mode.\n   *\n   * @return bool true if in compatibility mode, false if\n   * not compatibility mode or not ie\n   */\n  ieCompatibilityMode: function() {\n    return _populate() || (_ie_real_version > _ie);\n  },\n\n\n  /**\n   * Whether the browser is 64-bit IE.  Really, this is kind of weak sauce;  we\n   * only need this because Skype can't handle 64-bit IE yet.  We need to remove\n   * this when we don't need it -- tracked by #601957.\n   */\n  ie64: function() {\n    return UserAgent_DEPRECATED.ie() && _win64;\n  },\n\n  /**\n   *  Check if the UA is Firefox.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  firefox: function() {\n    return _populate() || _firefox;\n  },\n\n\n  /**\n   *  Check if the UA is Opera.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  opera: function() {\n    return _populate() || _opera;\n  },\n\n\n  /**\n   *  Check if the UA is WebKit.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  webkit: function() {\n    return _populate() || _webkit;\n  },\n\n  /**\n   *  For Push\n   *  WILL BE REMOVED VERY SOON. Use UserAgent_DEPRECATED.webkit\n   */\n  safari: function() {\n    return UserAgent_DEPRECATED.webkit();\n  },\n\n  /**\n   *  Check if the UA is a Chrome browser.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  chrome : function() {\n    return _populate() || _chrome;\n  },\n\n\n  /**\n   *  Check if the user is running Windows.\n   *\n   *  @return bool `true' if the user's OS is Windows.\n   */\n  windows: function() {\n    return _populate() || _windows;\n  },\n\n\n  /**\n   *  Check if the user is running Mac OS X.\n   *\n   *  @return float|bool   Returns a float if a version number is detected,\n   *                       otherwise true/false.\n   */\n  osx: function() {\n    return _populate() || _osx;\n  },\n\n  /**\n   * Check if the user is running Linux.\n   *\n   * @return bool `true' if the user's OS is some flavor of Linux.\n   */\n  linux: function() {\n    return _populate() || _linux;\n  },\n\n  /**\n   * Check if the user is running on an iPhone or iPod platform.\n   *\n   * @return bool `true' if the user is running some flavor of the\n   *    iPhone OS.\n   */\n  iphone: function() {\n    return _populate() || _iphone;\n  },\n\n  mobile: function() {\n    return _populate() || (_iphone || _ipad || _android || _mobile);\n  },\n\n  nativeApp: function() {\n    // webviews inside of the native apps\n    return _populate() || _native;\n  },\n\n  android: function() {\n    return _populate() || _android;\n  },\n\n  ipad: function() {\n    return _populate() || _ipad;\n  }\n};\n\nmodule.exports = UserAgent_DEPRECATED;\n"]}