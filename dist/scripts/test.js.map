{"version":3,"sources":["../../scripts/test.js"],"names":["process","env","BABEL_ENV","NODE_ENV","PUBLIC_URL","on","err","require","jest","argv","slice","CI","indexOf","push","run"],"mappings":"AAAA;;AAEA;;AACAA,QAAQC,GAAR,CAAYC,SAAZ,GAAwB,MAAxB;AACAF,QAAQC,GAAR,CAAYE,QAAZ,GAAuB,MAAvB;AACAH,QAAQC,GAAR,CAAYG,UAAZ,GAAyB,EAAzB;;AAEA;AACA;AACA;AACAJ,QAAQK,EAAR,CAAW,oBAAX,EAAiC,eAAO;AACtC,QAAMC,GAAN;AACD,CAFD;;AAIA;AACAC,QAAQ,eAAR;;AAEA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,OAAOT,QAAQS,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAb;;AAEA;AACA,IAAI,CAACV,QAAQC,GAAR,CAAYU,EAAb,IAAmBF,KAAKG,OAAL,CAAa,YAAb,IAA6B,CAApD,EAAuD;AACrDH,OAAKI,IAAL,CAAU,SAAV;AACD;;AAGDL,KAAKM,GAAL,CAASL,IAAT","file":"test.js","sourcesContent":["'use strict';\n\n// Do this as the first thing so that any code reading it knows the right env.\nprocess.env.BABEL_ENV = 'test';\nprocess.env.NODE_ENV = 'test';\nprocess.env.PUBLIC_URL = '';\n\n// Makes the script crash on unhandled rejections instead of silently\n// ignoring them. In the future, promise rejections that are not handled will\n// terminate the Node.js process with a non-zero exit code.\nprocess.on('unhandledRejection', err => {\n  throw err;\n});\n\n// Ensure environment variables are read.\nrequire('../config/env');\n\nconst jest = require('jest');\nconst argv = process.argv.slice(2);\n\n// Watch unless on CI or in coverage mode\nif (!process.env.CI && argv.indexOf('--coverage') < 0) {\n  argv.push('--watch');\n}\n\n\njest.run(argv);\n"]}