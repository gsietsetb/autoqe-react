{"version":3,"sources":["../../config/paths.js"],"names":["path","require","fs","url","appDirectory","realpathSync","process","cwd","resolveApp","resolve","relativePath","envPublicUrl","env","PUBLIC_URL","ensureSlash","needsSlash","hasSlash","endsWith","substr","length","getPublicUrl","appPackageJson","homepage","getServedPath","publicUrl","servedUrl","parse","pathname","module","exports","dotenv","appBuild","appPublic","appHtml","appIndexJs","appSrc","yarnLockFile","testsSetup","appNodeModules","servedPath"],"mappings":"AAAA;;AAEA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,KAAKD,QAAQ,IAAR,CAAX;AACA,IAAME,MAAMF,QAAQ,KAAR,CAAZ;;AAEA;AACA;AACA,IAAMG,eAAeF,GAAGG,YAAH,CAAgBC,QAAQC,GAAR,EAAhB,CAArB;AACA,IAAMC,aAAa,SAAbA,UAAa;AAAA,SAAgBR,KAAKS,OAAL,CAAaL,YAAb,EAA2BM,YAA3B,CAAhB;AAAA,CAAnB;;AAEA,IAAMC,eAAeL,QAAQM,GAAR,CAAYC,UAAjC;;AAEA,SAASC,WAAT,CAAqBd,IAArB,EAA2Be,UAA3B,EAAuC;AACrC,MAAMC,WAAWhB,KAAKiB,QAAL,CAAc,GAAd,CAAjB;AACA,MAAID,YAAY,CAACD,UAAjB,EAA6B;AAC3B,WAAOf,KAAKkB,MAAL,CAAYlB,IAAZ,EAAkBA,KAAKmB,MAAL,GAAc,CAAhC,CAAP;AACD,GAFD,MAEO,IAAI,CAACH,QAAD,IAAaD,UAAjB,EAA6B;AAClC,WAAUf,IAAV;AACD,GAFM,MAEA;AACL,WAAOA,IAAP;AACD;AACF;;AAED,IAAMoB,eAAe,SAAfA,YAAe;AAAA,SACnBT,gBAAgBV,QAAQoB,cAAR,EAAwBC,QADrB;AAAA,CAArB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAT,CAAuBF,cAAvB,EAAuC;AACrC,MAAMG,YAAYJ,aAAaC,cAAb,CAAlB;AACA,MAAMI,YACJd,iBAAiBa,YAAYrB,IAAIuB,KAAJ,CAAUF,SAAV,EAAqBG,QAAjC,GAA4C,GAA7D,CADF;AAEA,SAAOb,YAAYW,SAAZ,EAAuB,IAAvB,CAAP;AACD;;AAED;AACAG,OAAOC,OAAP,GAAiB;AACfC,UAAQtB,WAAW,MAAX,CADO;AAEfuB,YAAUvB,WAAW,OAAX,CAFK;AAGfwB,aAAWxB,WAAW,QAAX,CAHI;AAIfyB,WAASzB,WAAW,mBAAX,CAJM;AAKf0B,cAAY1B,WAAW,cAAX,CALG;AAMfa,kBAAgBb,WAAW,cAAX,CAND;AAOf2B,UAAQ3B,WAAW,KAAX,CAPO;AAQf4B,gBAAc5B,WAAW,WAAX,CARC;AASf6B,cAAY7B,WAAW,mBAAX,CATG;AAUf8B,kBAAgB9B,WAAW,cAAX,CAVD;AAWfgB,aAAWJ,aAAaZ,WAAW,cAAX,CAAb,CAXI;AAYf+B,cAAYhB,cAAcf,WAAW,cAAX,CAAd;AAZG,CAAjB","file":"paths.js","sourcesContent":["'use strict';\n\nconst path = require('path');\nconst fs = require('fs');\nconst url = require('url');\n\n// Make sure any symlinks in the project folder are resolved:\n// https://github.com/facebookincubator/create-react-app/issues/637\nconst appDirectory = fs.realpathSync(process.cwd());\nconst resolveApp = relativePath => path.resolve(appDirectory, relativePath);\n\nconst envPublicUrl = process.env.PUBLIC_URL;\n\nfunction ensureSlash(path, needsSlash) {\n  const hasSlash = path.endsWith('/');\n  if (hasSlash && !needsSlash) {\n    return path.substr(path, path.length - 1);\n  } else if (!hasSlash && needsSlash) {\n    return `${path}/`;\n  } else {\n    return path;\n  }\n}\n\nconst getPublicUrl = appPackageJson =>\n  envPublicUrl || require(appPackageJson).homepage;\n\n// We use `PUBLIC_URL` environment variable or \"homepage\" field to infer\n// \"public path\" at which the app is served.\n// Webpack needs to know it to put the right <script> hrefs into HTML even in\n// single-page apps that may serve index.html for nested URLs like /todos/42.\n// We can't use a relative path in HTML because we don't want to load something\n// like /todos/42/static/js/bundle.7289d.js. We have to know the root.\nfunction getServedPath(appPackageJson) {\n  const publicUrl = getPublicUrl(appPackageJson);\n  const servedUrl =\n    envPublicUrl || (publicUrl ? url.parse(publicUrl).pathname : '/');\n  return ensureSlash(servedUrl, true);\n}\n\n// config after eject: we're in ./config/\nmodule.exports = {\n  dotenv: resolveApp('.env'),\n  appBuild: resolveApp('build'),\n  appPublic: resolveApp('public'),\n  appHtml: resolveApp('public/index.html'),\n  appIndexJs: resolveApp('src/index.js'),\n  appPackageJson: resolveApp('package.json'),\n  appSrc: resolveApp('src'),\n  yarnLockFile: resolveApp('yarn.lock'),\n  testsSetup: resolveApp('src/setupTests.js'),\n  appNodeModules: resolveApp('node_modules'),\n  publicUrl: getPublicUrl(resolveApp('package.json')),\n  servedPath: getServedPath(resolveApp('package.json')),\n};\n"]}